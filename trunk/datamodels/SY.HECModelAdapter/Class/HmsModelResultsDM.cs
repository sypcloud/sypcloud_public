//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码由 xsd 自动生成, Version=4.8.3928.0。
// 


/// <summary>
///Represents a strongly typed in-memory cache of data.
///</summary>
[global::System.Serializable()]
[global::System.ComponentModel.DesignerCategoryAttribute("code")]
[global::System.ComponentModel.ToolboxItem(true)]
[global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
[global::System.Xml.Serialization.XmlRootAttribute("HmsModelResultsDM")]
[global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
public partial class HmsModelResultsDM : global::System.Data.DataSet
{

    private RunResultsDataTable tableRunResults;

    private BasinElementDataTable tableBasinElement;

    private SubbasinAreaDataTable tableSubbasinArea;

    private DrainageAreaDataTable tableDrainageArea;

    private FlowLinkDataTable tableFlowLink;

    private HydrologyDataTable tableHydrology;

    private TimeSeriesDataTable tableTimeSeries;

    private TimeSeriesTypeDataTable tableTimeSeriesType;

    private StatisticsDataTable tableStatistics;

    private StatisticMeasureDataTable tableStatisticMeasure;

    private global::System.Data.DataRelation relationRunResults_BasinElement;

    private global::System.Data.DataRelation relationBasinElement_SubbasinArea;

    private global::System.Data.DataRelation relationBasinElement_DrainageArea;

    private global::System.Data.DataRelation relationBasinElement_FlowLink;

    private global::System.Data.DataRelation relationBasinElement_Hydrology;

    private global::System.Data.DataRelation relationHydrology_TimeSeries;

    private global::System.Data.DataRelation relationTimeSeries_TimeSeriesType;

    private global::System.Data.DataRelation relationBasinElement_Statistics;

    private global::System.Data.DataRelation relationStatistics_StatisticMeasure;

    private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public HmsModelResultsDM()
    {
        this.BeginInit();
        this.InitClass();
        global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
        base.Tables.CollectionChanged += schemaChangedHandler;
        base.Relations.CollectionChanged += schemaChangedHandler;
        this.EndInit();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    protected HmsModelResultsDM(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
            base(info, context, false)
    {
        if ((this.IsBinarySerialized(info, context) == true))
        {
            this.InitVars(false);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler1;
            this.Relations.CollectionChanged += schemaChangedHandler1;
            return;
        }
        string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
        if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema))
        {
            global::System.Data.DataSet ds = new global::System.Data.DataSet();
            ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            if ((ds.Tables["RunResults"] != null))
            {
                base.Tables.Add(new RunResultsDataTable(ds.Tables["RunResults"]));
            }
            if ((ds.Tables["BasinElement"] != null))
            {
                base.Tables.Add(new BasinElementDataTable(ds.Tables["BasinElement"]));
            }
            if ((ds.Tables["SubbasinArea"] != null))
            {
                base.Tables.Add(new SubbasinAreaDataTable(ds.Tables["SubbasinArea"]));
            }
            if ((ds.Tables["DrainageArea"] != null))
            {
                base.Tables.Add(new DrainageAreaDataTable(ds.Tables["DrainageArea"]));
            }
            if ((ds.Tables["FlowLink"] != null))
            {
                base.Tables.Add(new FlowLinkDataTable(ds.Tables["FlowLink"]));
            }
            if ((ds.Tables["Hydrology"] != null))
            {
                base.Tables.Add(new HydrologyDataTable(ds.Tables["Hydrology"]));
            }
            if ((ds.Tables["TimeSeries"] != null))
            {
                base.Tables.Add(new TimeSeriesDataTable(ds.Tables["TimeSeries"]));
            }
            if ((ds.Tables["TimeSeriesType"] != null))
            {
                base.Tables.Add(new TimeSeriesTypeDataTable(ds.Tables["TimeSeriesType"]));
            }
            if ((ds.Tables["Statistics"] != null))
            {
                base.Tables.Add(new StatisticsDataTable(ds.Tables["Statistics"]));
            }
            if ((ds.Tables["StatisticMeasure"] != null))
            {
                base.Tables.Add(new StatisticMeasureDataTable(ds.Tables["StatisticMeasure"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        else
        {
            this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
        }
        this.GetSerializationData(info, context);
        global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
        base.Tables.CollectionChanged += schemaChangedHandler;
        this.Relations.CollectionChanged += schemaChangedHandler;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [global::System.ComponentModel.Browsable(false)]
    [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
    public RunResultsDataTable RunResults
    {
        get
        {
            return this.tableRunResults;
        }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [global::System.ComponentModel.Browsable(false)]
    [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
    public BasinElementDataTable BasinElement
    {
        get
        {
            return this.tableBasinElement;
        }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [global::System.ComponentModel.Browsable(false)]
    [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
    public SubbasinAreaDataTable SubbasinArea
    {
        get
        {
            return this.tableSubbasinArea;
        }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [global::System.ComponentModel.Browsable(false)]
    [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
    public DrainageAreaDataTable DrainageArea
    {
        get
        {
            return this.tableDrainageArea;
        }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [global::System.ComponentModel.Browsable(false)]
    [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
    public FlowLinkDataTable FlowLink
    {
        get
        {
            return this.tableFlowLink;
        }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [global::System.ComponentModel.Browsable(false)]
    [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
    public HydrologyDataTable Hydrology
    {
        get
        {
            return this.tableHydrology;
        }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [global::System.ComponentModel.Browsable(false)]
    [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
    public TimeSeriesDataTable TimeSeries
    {
        get
        {
            return this.tableTimeSeries;
        }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [global::System.ComponentModel.Browsable(false)]
    [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
    public TimeSeriesTypeDataTable TimeSeriesType
    {
        get
        {
            return this.tableTimeSeriesType;
        }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [global::System.ComponentModel.Browsable(false)]
    [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
    public StatisticsDataTable Statistics
    {
        get
        {
            return this.tableStatistics;
        }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [global::System.ComponentModel.Browsable(false)]
    [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
    public StatisticMeasureDataTable StatisticMeasure
    {
        get
        {
            return this.tableStatisticMeasure;
        }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [global::System.ComponentModel.BrowsableAttribute(true)]
    [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
    public override global::System.Data.SchemaSerializationMode SchemaSerializationMode
    {
        get
        {
            return this._schemaSerializationMode;
        }
        set
        {
            this._schemaSerializationMode = value;
        }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
    public new global::System.Data.DataTableCollection Tables
    {
        get
        {
            return base.Tables;
        }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
    public new global::System.Data.DataRelationCollection Relations
    {
        get
        {
            return base.Relations;
        }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    protected override void InitializeDerivedDataSet()
    {
        this.BeginInit();
        this.InitClass();
        this.EndInit();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public override global::System.Data.DataSet Clone()
    {
        HmsModelResultsDM cln = ((HmsModelResultsDM)(base.Clone()));
        cln.InitVars();
        cln.SchemaSerializationMode = this.SchemaSerializationMode;
        return cln;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    protected override bool ShouldSerializeTables()
    {
        return false;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    protected override bool ShouldSerializeRelations()
    {
        return false;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader)
    {
        if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema))
        {
            this.Reset();
            global::System.Data.DataSet ds = new global::System.Data.DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["RunResults"] != null))
            {
                base.Tables.Add(new RunResultsDataTable(ds.Tables["RunResults"]));
            }
            if ((ds.Tables["BasinElement"] != null))
            {
                base.Tables.Add(new BasinElementDataTable(ds.Tables["BasinElement"]));
            }
            if ((ds.Tables["SubbasinArea"] != null))
            {
                base.Tables.Add(new SubbasinAreaDataTable(ds.Tables["SubbasinArea"]));
            }
            if ((ds.Tables["DrainageArea"] != null))
            {
                base.Tables.Add(new DrainageAreaDataTable(ds.Tables["DrainageArea"]));
            }
            if ((ds.Tables["FlowLink"] != null))
            {
                base.Tables.Add(new FlowLinkDataTable(ds.Tables["FlowLink"]));
            }
            if ((ds.Tables["Hydrology"] != null))
            {
                base.Tables.Add(new HydrologyDataTable(ds.Tables["Hydrology"]));
            }
            if ((ds.Tables["TimeSeries"] != null))
            {
                base.Tables.Add(new TimeSeriesDataTable(ds.Tables["TimeSeries"]));
            }
            if ((ds.Tables["TimeSeriesType"] != null))
            {
                base.Tables.Add(new TimeSeriesTypeDataTable(ds.Tables["TimeSeriesType"]));
            }
            if ((ds.Tables["Statistics"] != null))
            {
                base.Tables.Add(new StatisticsDataTable(ds.Tables["Statistics"]));
            }
            if ((ds.Tables["StatisticMeasure"] != null))
            {
                base.Tables.Add(new StatisticMeasureDataTable(ds.Tables["StatisticMeasure"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        else
        {
            this.ReadXml(reader);
            this.InitVars();
        }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable()
    {
        global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
        this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
        stream.Position = 0;
        return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    internal void InitVars()
    {
        this.InitVars(true);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    internal void InitVars(bool initTable)
    {
        this.tableRunResults = ((RunResultsDataTable)(base.Tables["RunResults"]));
        if ((initTable == true))
        {
            if ((this.tableRunResults != null))
            {
                this.tableRunResults.InitVars();
            }
        }
        this.tableBasinElement = ((BasinElementDataTable)(base.Tables["BasinElement"]));
        if ((initTable == true))
        {
            if ((this.tableBasinElement != null))
            {
                this.tableBasinElement.InitVars();
            }
        }
        this.tableSubbasinArea = ((SubbasinAreaDataTable)(base.Tables["SubbasinArea"]));
        if ((initTable == true))
        {
            if ((this.tableSubbasinArea != null))
            {
                this.tableSubbasinArea.InitVars();
            }
        }
        this.tableDrainageArea = ((DrainageAreaDataTable)(base.Tables["DrainageArea"]));
        if ((initTable == true))
        {
            if ((this.tableDrainageArea != null))
            {
                this.tableDrainageArea.InitVars();
            }
        }
        this.tableFlowLink = ((FlowLinkDataTable)(base.Tables["FlowLink"]));
        if ((initTable == true))
        {
            if ((this.tableFlowLink != null))
            {
                this.tableFlowLink.InitVars();
            }
        }
        this.tableHydrology = ((HydrologyDataTable)(base.Tables["Hydrology"]));
        if ((initTable == true))
        {
            if ((this.tableHydrology != null))
            {
                this.tableHydrology.InitVars();
            }
        }
        this.tableTimeSeries = ((TimeSeriesDataTable)(base.Tables["TimeSeries"]));
        if ((initTable == true))
        {
            if ((this.tableTimeSeries != null))
            {
                this.tableTimeSeries.InitVars();
            }
        }
        this.tableTimeSeriesType = ((TimeSeriesTypeDataTable)(base.Tables["TimeSeriesType"]));
        if ((initTable == true))
        {
            if ((this.tableTimeSeriesType != null))
            {
                this.tableTimeSeriesType.InitVars();
            }
        }
        this.tableStatistics = ((StatisticsDataTable)(base.Tables["Statistics"]));
        if ((initTable == true))
        {
            if ((this.tableStatistics != null))
            {
                this.tableStatistics.InitVars();
            }
        }
        this.tableStatisticMeasure = ((StatisticMeasureDataTable)(base.Tables["StatisticMeasure"]));
        if ((initTable == true))
        {
            if ((this.tableStatisticMeasure != null))
            {
                this.tableStatisticMeasure.InitVars();
            }
        }
        this.relationRunResults_BasinElement = this.Relations["RunResults_BasinElement"];
        this.relationBasinElement_SubbasinArea = this.Relations["BasinElement_SubbasinArea"];
        this.relationBasinElement_DrainageArea = this.Relations["BasinElement_DrainageArea"];
        this.relationBasinElement_FlowLink = this.Relations["BasinElement_FlowLink"];
        this.relationBasinElement_Hydrology = this.Relations["BasinElement_Hydrology"];
        this.relationHydrology_TimeSeries = this.Relations["Hydrology_TimeSeries"];
        this.relationTimeSeries_TimeSeriesType = this.Relations["TimeSeries_TimeSeriesType"];
        this.relationBasinElement_Statistics = this.Relations["BasinElement_Statistics"];
        this.relationStatistics_StatisticMeasure = this.Relations["Statistics_StatisticMeasure"];
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    private void InitClass()
    {
        this.DataSetName = "HmsModelResultsDM";
        this.Prefix = "";
        this.EnforceConstraints = true;
        this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        this.tableRunResults = new RunResultsDataTable();
        base.Tables.Add(this.tableRunResults);
        this.tableBasinElement = new BasinElementDataTable();
        base.Tables.Add(this.tableBasinElement);
        this.tableSubbasinArea = new SubbasinAreaDataTable();
        base.Tables.Add(this.tableSubbasinArea);
        this.tableDrainageArea = new DrainageAreaDataTable();
        base.Tables.Add(this.tableDrainageArea);
        this.tableFlowLink = new FlowLinkDataTable();
        base.Tables.Add(this.tableFlowLink);
        this.tableHydrology = new HydrologyDataTable();
        base.Tables.Add(this.tableHydrology);
        this.tableTimeSeries = new TimeSeriesDataTable();
        base.Tables.Add(this.tableTimeSeries);
        this.tableTimeSeriesType = new TimeSeriesTypeDataTable();
        base.Tables.Add(this.tableTimeSeriesType);
        this.tableStatistics = new StatisticsDataTable();
        base.Tables.Add(this.tableStatistics);
        this.tableStatisticMeasure = new StatisticMeasureDataTable();
        base.Tables.Add(this.tableStatisticMeasure);
        global::System.Data.ForeignKeyConstraint fkc;
        fkc = new global::System.Data.ForeignKeyConstraint("RunResults_BasinElement", new global::System.Data.DataColumn[] {
                    this.tableRunResults.RunResults_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableBasinElement.RunResults_IdColumn});
        this.tableBasinElement.Constraints.Add(fkc);
        fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
        fkc.DeleteRule = global::System.Data.Rule.Cascade;
        fkc.UpdateRule = global::System.Data.Rule.Cascade;
        fkc = new global::System.Data.ForeignKeyConstraint("BasinElement_SubbasinArea", new global::System.Data.DataColumn[] {
                    this.tableBasinElement.BasinElement_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableSubbasinArea.BasinElement_IdColumn});
        this.tableSubbasinArea.Constraints.Add(fkc);
        fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
        fkc.DeleteRule = global::System.Data.Rule.Cascade;
        fkc.UpdateRule = global::System.Data.Rule.Cascade;
        fkc = new global::System.Data.ForeignKeyConstraint("BasinElement_DrainageArea", new global::System.Data.DataColumn[] {
                    this.tableBasinElement.BasinElement_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableDrainageArea.BasinElement_IdColumn});
        this.tableDrainageArea.Constraints.Add(fkc);
        fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
        fkc.DeleteRule = global::System.Data.Rule.Cascade;
        fkc.UpdateRule = global::System.Data.Rule.Cascade;
        fkc = new global::System.Data.ForeignKeyConstraint("BasinElement_FlowLink", new global::System.Data.DataColumn[] {
                    this.tableBasinElement.BasinElement_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableFlowLink.BasinElement_IdColumn});
        this.tableFlowLink.Constraints.Add(fkc);
        fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
        fkc.DeleteRule = global::System.Data.Rule.Cascade;
        fkc.UpdateRule = global::System.Data.Rule.Cascade;
        fkc = new global::System.Data.ForeignKeyConstraint("BasinElement_Hydrology", new global::System.Data.DataColumn[] {
                    this.tableBasinElement.BasinElement_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableHydrology.BasinElement_IdColumn});
        this.tableHydrology.Constraints.Add(fkc);
        fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
        fkc.DeleteRule = global::System.Data.Rule.Cascade;
        fkc.UpdateRule = global::System.Data.Rule.Cascade;
        fkc = new global::System.Data.ForeignKeyConstraint("Hydrology_TimeSeries", new global::System.Data.DataColumn[] {
                    this.tableHydrology.Hydrology_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableTimeSeries.Hydrology_IdColumn});
        this.tableTimeSeries.Constraints.Add(fkc);
        fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
        fkc.DeleteRule = global::System.Data.Rule.Cascade;
        fkc.UpdateRule = global::System.Data.Rule.Cascade;
        fkc = new global::System.Data.ForeignKeyConstraint("TimeSeries_TimeSeriesType", new global::System.Data.DataColumn[] {
                    this.tableTimeSeries.TimeSeries_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableTimeSeriesType.TimeSeries_IdColumn});
        this.tableTimeSeriesType.Constraints.Add(fkc);
        fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
        fkc.DeleteRule = global::System.Data.Rule.Cascade;
        fkc.UpdateRule = global::System.Data.Rule.Cascade;
        fkc = new global::System.Data.ForeignKeyConstraint("BasinElement_Statistics", new global::System.Data.DataColumn[] {
                    this.tableBasinElement.BasinElement_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableStatistics.BasinElement_IdColumn});
        this.tableStatistics.Constraints.Add(fkc);
        fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
        fkc.DeleteRule = global::System.Data.Rule.Cascade;
        fkc.UpdateRule = global::System.Data.Rule.Cascade;
        fkc = new global::System.Data.ForeignKeyConstraint("Statistics_StatisticMeasure", new global::System.Data.DataColumn[] {
                    this.tableStatistics.Statistics_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableStatisticMeasure.Statistics_IdColumn});
        this.tableStatisticMeasure.Constraints.Add(fkc);
        fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
        fkc.DeleteRule = global::System.Data.Rule.Cascade;
        fkc.UpdateRule = global::System.Data.Rule.Cascade;
        this.relationRunResults_BasinElement = new global::System.Data.DataRelation("RunResults_BasinElement", new global::System.Data.DataColumn[] {
                    this.tableRunResults.RunResults_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableBasinElement.RunResults_IdColumn}, false);
        this.relationRunResults_BasinElement.Nested = true;
        this.Relations.Add(this.relationRunResults_BasinElement);
        this.relationBasinElement_SubbasinArea = new global::System.Data.DataRelation("BasinElement_SubbasinArea", new global::System.Data.DataColumn[] {
                    this.tableBasinElement.BasinElement_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableSubbasinArea.BasinElement_IdColumn}, false);
        this.relationBasinElement_SubbasinArea.Nested = true;
        this.Relations.Add(this.relationBasinElement_SubbasinArea);
        this.relationBasinElement_DrainageArea = new global::System.Data.DataRelation("BasinElement_DrainageArea", new global::System.Data.DataColumn[] {
                    this.tableBasinElement.BasinElement_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableDrainageArea.BasinElement_IdColumn}, false);
        this.relationBasinElement_DrainageArea.Nested = true;
        this.Relations.Add(this.relationBasinElement_DrainageArea);
        this.relationBasinElement_FlowLink = new global::System.Data.DataRelation("BasinElement_FlowLink", new global::System.Data.DataColumn[] {
                    this.tableBasinElement.BasinElement_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableFlowLink.BasinElement_IdColumn}, false);
        this.relationBasinElement_FlowLink.Nested = true;
        this.Relations.Add(this.relationBasinElement_FlowLink);
        this.relationBasinElement_Hydrology = new global::System.Data.DataRelation("BasinElement_Hydrology", new global::System.Data.DataColumn[] {
                    this.tableBasinElement.BasinElement_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableHydrology.BasinElement_IdColumn}, false);
        this.relationBasinElement_Hydrology.Nested = true;
        this.Relations.Add(this.relationBasinElement_Hydrology);
        this.relationHydrology_TimeSeries = new global::System.Data.DataRelation("Hydrology_TimeSeries", new global::System.Data.DataColumn[] {
                    this.tableHydrology.Hydrology_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableTimeSeries.Hydrology_IdColumn}, false);
        this.relationHydrology_TimeSeries.Nested = true;
        this.Relations.Add(this.relationHydrology_TimeSeries);
        this.relationTimeSeries_TimeSeriesType = new global::System.Data.DataRelation("TimeSeries_TimeSeriesType", new global::System.Data.DataColumn[] {
                    this.tableTimeSeries.TimeSeries_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableTimeSeriesType.TimeSeries_IdColumn}, false);
        this.relationTimeSeries_TimeSeriesType.Nested = true;
        this.Relations.Add(this.relationTimeSeries_TimeSeriesType);
        this.relationBasinElement_Statistics = new global::System.Data.DataRelation("BasinElement_Statistics", new global::System.Data.DataColumn[] {
                    this.tableBasinElement.BasinElement_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableStatistics.BasinElement_IdColumn}, false);
        this.relationBasinElement_Statistics.Nested = true;
        this.Relations.Add(this.relationBasinElement_Statistics);
        this.relationStatistics_StatisticMeasure = new global::System.Data.DataRelation("Statistics_StatisticMeasure", new global::System.Data.DataColumn[] {
                    this.tableStatistics.Statistics_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableStatisticMeasure.Statistics_IdColumn}, false);
        this.relationStatistics_StatisticMeasure.Nested = true;
        this.Relations.Add(this.relationStatistics_StatisticMeasure);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    private bool ShouldSerializeRunResults()
    {
        return false;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    private bool ShouldSerializeBasinElement()
    {
        return false;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    private bool ShouldSerializeSubbasinArea()
    {
        return false;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    private bool ShouldSerializeDrainageArea()
    {
        return false;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    private bool ShouldSerializeFlowLink()
    {
        return false;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    private bool ShouldSerializeHydrology()
    {
        return false;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    private bool ShouldSerializeTimeSeries()
    {
        return false;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    private bool ShouldSerializeTimeSeriesType()
    {
        return false;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    private bool ShouldSerializeStatistics()
    {
        return false;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    private bool ShouldSerializeStatisticMeasure()
    {
        return false;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e)
    {
        if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove))
        {
            this.InitVars();
        }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs)
    {
        HmsModelResultsDM ds = new HmsModelResultsDM();
        global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
        global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
        global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
        any.Namespace = ds.Namespace;
        sequence.Items.Add(any);
        type.Particle = sequence;
        global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
        if (xs.Contains(dsSchema.TargetNamespace))
        {
            global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
            global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
            try
            {
                global::System.Xml.Schema.XmlSchema schema = null;
                dsSchema.Write(s1);
                for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext();)
                {
                    schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                    s2.SetLength(0);
                    schema.Write(s2);
                    if ((s1.Length == s2.Length))
                    {
                        s1.Position = 0;
                        s2.Position = 0;
                        for (; ((s1.Position != s1.Length)
                                    && (s1.ReadByte() == s2.ReadByte()));)
                        {
                            ;
                        }
                        if ((s1.Position == s1.Length))
                        {
                            return type;
                        }
                    }
                }
            }
            finally
            {
                if ((s1 != null))
                {
                    s1.Close();
                }
                if ((s2 != null))
                {
                    s2.Close();
                }
            }
        }
        xs.Add(dsSchema);
        return type;
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public delegate void RunResultsRowChangeEventHandler(object sender, RunResultsRowChangeEvent e);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public delegate void BasinElementRowChangeEventHandler(object sender, BasinElementRowChangeEvent e);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public delegate void SubbasinAreaRowChangeEventHandler(object sender, SubbasinAreaRowChangeEvent e);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public delegate void DrainageAreaRowChangeEventHandler(object sender, DrainageAreaRowChangeEvent e);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public delegate void FlowLinkRowChangeEventHandler(object sender, FlowLinkRowChangeEvent e);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public delegate void HydrologyRowChangeEventHandler(object sender, HydrologyRowChangeEvent e);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public delegate void TimeSeriesRowChangeEventHandler(object sender, TimeSeriesRowChangeEvent e);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public delegate void TimeSeriesTypeRowChangeEventHandler(object sender, TimeSeriesTypeRowChangeEvent e);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public delegate void StatisticsRowChangeEventHandler(object sender, StatisticsRowChangeEvent e);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public delegate void StatisticMeasureRowChangeEventHandler(object sender, StatisticMeasureRowChangeEvent e);

    /// <summary>
    ///Represents the strongly named DataTable class.
    ///</summary>
    [global::System.Serializable()]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
    public partial class RunResultsDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable
    {

        private global::System.Data.DataColumn columnRunName;

        private global::System.Data.DataColumn columnExecutionTime;

        private global::System.Data.DataColumn columnStartTime;

        private global::System.Data.DataColumn columnEndTime;

        private global::System.Data.DataColumn columnRunResults_Id;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public RunResultsDataTable()
        {
            this.TableName = "RunResults";
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal RunResultsDataTable(global::System.Data.DataTable table)
        {
            this.TableName = table.TableName;
            if ((table.CaseSensitive != table.DataSet.CaseSensitive))
            {
                this.CaseSensitive = table.CaseSensitive;
            }
            if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
            {
                this.Locale = table.Locale;
            }
            if ((table.Namespace != table.DataSet.Namespace))
            {
                this.Namespace = table.Namespace;
            }
            this.Prefix = table.Prefix;
            this.MinimumCapacity = table.MinimumCapacity;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected RunResultsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                base(info, context)
        {
            this.InitVars();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn RunNameColumn
        {
            get
            {
                return this.columnRunName;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn ExecutionTimeColumn
        {
            get
            {
                return this.columnExecutionTime;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn StartTimeColumn
        {
            get
            {
                return this.columnStartTime;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn EndTimeColumn
        {
            get
            {
                return this.columnEndTime;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn RunResults_IdColumn
        {
            get
            {
                return this.columnRunResults_Id;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int Count
        {
            get
            {
                return this.Rows.Count;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public RunResultsRow this[int index]
        {
            get
            {
                return ((RunResultsRow)(this.Rows[index]));
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event RunResultsRowChangeEventHandler RunResultsRowChanging;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event RunResultsRowChangeEventHandler RunResultsRowChanged;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event RunResultsRowChangeEventHandler RunResultsRowDeleting;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event RunResultsRowChangeEventHandler RunResultsRowDeleted;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void AddRunResultsRow(RunResultsRow row)
        {
            this.Rows.Add(row);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public RunResultsRow AddRunResultsRow(string RunName, string ExecutionTime, string StartTime, string EndTime)
        {
            RunResultsRow rowRunResultsRow = ((RunResultsRow)(this.NewRow()));
            object[] columnValuesArray = new object[] {
                    RunName,
                    ExecutionTime,
                    StartTime,
                    EndTime,
                    null};
            rowRunResultsRow.ItemArray = columnValuesArray;
            this.Rows.Add(rowRunResultsRow);
            return rowRunResultsRow;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual global::System.Collections.IEnumerator GetEnumerator()
        {
            return this.Rows.GetEnumerator();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataTable Clone()
        {
            RunResultsDataTable cln = ((RunResultsDataTable)(base.Clone()));
            cln.InitVars();
            return cln;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataTable CreateInstance()
        {
            return new RunResultsDataTable();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars()
        {
            this.columnRunName = base.Columns["RunName"];
            this.columnExecutionTime = base.Columns["ExecutionTime"];
            this.columnStartTime = base.Columns["StartTime"];
            this.columnEndTime = base.Columns["EndTime"];
            this.columnRunResults_Id = base.Columns["RunResults_Id"];
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass()
        {
            this.columnRunName = new global::System.Data.DataColumn("RunName", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnRunName);
            this.columnExecutionTime = new global::System.Data.DataColumn("ExecutionTime", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnExecutionTime);
            this.columnStartTime = new global::System.Data.DataColumn("StartTime", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnStartTime);
            this.columnEndTime = new global::System.Data.DataColumn("EndTime", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnEndTime);
            this.columnRunResults_Id = new global::System.Data.DataColumn("RunResults_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnRunResults_Id);
            this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                            this.columnRunResults_Id}, true));
            this.columnRunResults_Id.AutoIncrement = true;
            this.columnRunResults_Id.AllowDBNull = false;
            this.columnRunResults_Id.Unique = true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public RunResultsRow NewRunResultsRow()
        {
            return ((RunResultsRow)(this.NewRow()));
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
        {
            return new RunResultsRow(builder);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Type GetRowType()
        {
            return typeof(RunResultsRow);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowChanged(e);
            if ((this.RunResultsRowChanged != null))
            {
                this.RunResultsRowChanged(this, new RunResultsRowChangeEvent(((RunResultsRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowChanging(e);
            if ((this.RunResultsRowChanging != null))
            {
                this.RunResultsRowChanging(this, new RunResultsRowChangeEvent(((RunResultsRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowDeleted(e);
            if ((this.RunResultsRowDeleted != null))
            {
                this.RunResultsRowDeleted(this, new RunResultsRowChangeEvent(((RunResultsRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowDeleting(e);
            if ((this.RunResultsRowDeleting != null))
            {
                this.RunResultsRowDeleting(this, new RunResultsRowChangeEvent(((RunResultsRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void RemoveRunResultsRow(RunResultsRow row)
        {
            this.Rows.Remove(row);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
        {
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            HmsModelResultsDM ds = new HmsModelResultsDM();
            global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
            any1.Namespace = "http://www.w3.org/2001/XMLSchema";
            any1.MinOccurs = new decimal(0);
            any1.MaxOccurs = decimal.MaxValue;
            any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any1);
            global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
            any2.MinOccurs = new decimal(1);
            any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any2);
            global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute1.Name = "namespace";
            attribute1.FixedValue = ds.Namespace;
            type.Attributes.Add(attribute1);
            global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute2.Name = "tableTypeName";
            attribute2.FixedValue = "RunResultsDataTable";
            type.Attributes.Add(attribute2);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace))
            {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try
                {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext();)
                    {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length))
                        {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length)
                                        && (s1.ReadByte() == s2.ReadByte()));)
                            {
                                ;
                            }
                            if ((s1.Position == s1.Length))
                            {
                                return type;
                            }
                        }
                    }
                }
                finally
                {
                    if ((s1 != null))
                    {
                        s1.Close();
                    }
                    if ((s2 != null))
                    {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
    }

    /// <summary>
    ///Represents the strongly named DataTable class.
    ///</summary>
    [global::System.Serializable()]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
    public partial class BasinElementDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable
    {

        private global::System.Data.DataColumn columnExecutionTime;

        private global::System.Data.DataColumn columnname;

        private global::System.Data.DataColumn columnUnitSystem;

        private global::System.Data.DataColumn columnIsComputationPoint;

        private global::System.Data.DataColumn columnSediment;

        private global::System.Data.DataColumn columnWaterQuality;

        private global::System.Data.DataColumn columntype;

        private global::System.Data.DataColumn columnBasinElement_Id;

        private global::System.Data.DataColumn columnRunResults_Id;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public BasinElementDataTable()
        {
            this.TableName = "BasinElement";
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal BasinElementDataTable(global::System.Data.DataTable table)
        {
            this.TableName = table.TableName;
            if ((table.CaseSensitive != table.DataSet.CaseSensitive))
            {
                this.CaseSensitive = table.CaseSensitive;
            }
            if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
            {
                this.Locale = table.Locale;
            }
            if ((table.Namespace != table.DataSet.Namespace))
            {
                this.Namespace = table.Namespace;
            }
            this.Prefix = table.Prefix;
            this.MinimumCapacity = table.MinimumCapacity;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected BasinElementDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                base(info, context)
        {
            this.InitVars();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn ExecutionTimeColumn
        {
            get
            {
                return this.columnExecutionTime;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn nameColumn
        {
            get
            {
                return this.columnname;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn UnitSystemColumn
        {
            get
            {
                return this.columnUnitSystem;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn IsComputationPointColumn
        {
            get
            {
                return this.columnIsComputationPoint;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn SedimentColumn
        {
            get
            {
                return this.columnSediment;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn WaterQualityColumn
        {
            get
            {
                return this.columnWaterQuality;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn typeColumn
        {
            get
            {
                return this.columntype;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn BasinElement_IdColumn
        {
            get
            {
                return this.columnBasinElement_Id;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn RunResults_IdColumn
        {
            get
            {
                return this.columnRunResults_Id;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int Count
        {
            get
            {
                return this.Rows.Count;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public BasinElementRow this[int index]
        {
            get
            {
                return ((BasinElementRow)(this.Rows[index]));
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event BasinElementRowChangeEventHandler BasinElementRowChanging;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event BasinElementRowChangeEventHandler BasinElementRowChanged;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event BasinElementRowChangeEventHandler BasinElementRowDeleting;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event BasinElementRowChangeEventHandler BasinElementRowDeleted;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void AddBasinElementRow(BasinElementRow row)
        {
            this.Rows.Add(row);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public BasinElementRow AddBasinElementRow(string ExecutionTime, string name, string UnitSystem, string IsComputationPoint, string Sediment, string WaterQuality, string type, RunResultsRow parentRunResultsRowByRunResults_BasinElement)
        {
            BasinElementRow rowBasinElementRow = ((BasinElementRow)(this.NewRow()));
            object[] columnValuesArray = new object[] {
                    ExecutionTime,
                    name,
                    UnitSystem,
                    IsComputationPoint,
                    Sediment,
                    WaterQuality,
                    type,
                    null,
                    null};
            if ((parentRunResultsRowByRunResults_BasinElement != null))
            {
                columnValuesArray[8] = parentRunResultsRowByRunResults_BasinElement[4];
            }
            rowBasinElementRow.ItemArray = columnValuesArray;
            this.Rows.Add(rowBasinElementRow);
            return rowBasinElementRow;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual global::System.Collections.IEnumerator GetEnumerator()
        {
            return this.Rows.GetEnumerator();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataTable Clone()
        {
            BasinElementDataTable cln = ((BasinElementDataTable)(base.Clone()));
            cln.InitVars();
            return cln;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataTable CreateInstance()
        {
            return new BasinElementDataTable();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars()
        {
            this.columnExecutionTime = base.Columns["ExecutionTime"];
            this.columnname = base.Columns["name"];
            this.columnUnitSystem = base.Columns["UnitSystem"];
            this.columnIsComputationPoint = base.Columns["IsComputationPoint"];
            this.columnSediment = base.Columns["Sediment"];
            this.columnWaterQuality = base.Columns["WaterQuality"];
            this.columntype = base.Columns["type"];
            this.columnBasinElement_Id = base.Columns["BasinElement_Id"];
            this.columnRunResults_Id = base.Columns["RunResults_Id"];
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass()
        {
            this.columnExecutionTime = new global::System.Data.DataColumn("ExecutionTime", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnExecutionTime);
            this.columnname = new global::System.Data.DataColumn("name", typeof(string), null, global::System.Data.MappingType.Attribute);
            base.Columns.Add(this.columnname);
            this.columnUnitSystem = new global::System.Data.DataColumn("UnitSystem", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnUnitSystem);
            this.columnIsComputationPoint = new global::System.Data.DataColumn("IsComputationPoint", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnIsComputationPoint);
            this.columnSediment = new global::System.Data.DataColumn("Sediment", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnSediment);
            this.columnWaterQuality = new global::System.Data.DataColumn("WaterQuality", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnWaterQuality);
            this.columntype = new global::System.Data.DataColumn("type", typeof(string), null, global::System.Data.MappingType.Attribute);
            base.Columns.Add(this.columntype);
            this.columnBasinElement_Id = new global::System.Data.DataColumn("BasinElement_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnBasinElement_Id);
            this.columnRunResults_Id = new global::System.Data.DataColumn("RunResults_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnRunResults_Id);
            this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                            this.columnBasinElement_Id}, true));
            this.columnname.Namespace = "";
            this.columntype.Namespace = "";
            this.columnBasinElement_Id.AutoIncrement = true;
            this.columnBasinElement_Id.AllowDBNull = false;
            this.columnBasinElement_Id.Unique = true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public BasinElementRow NewBasinElementRow()
        {
            return ((BasinElementRow)(this.NewRow()));
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
        {
            return new BasinElementRow(builder);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Type GetRowType()
        {
            return typeof(BasinElementRow);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowChanged(e);
            if ((this.BasinElementRowChanged != null))
            {
                this.BasinElementRowChanged(this, new BasinElementRowChangeEvent(((BasinElementRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowChanging(e);
            if ((this.BasinElementRowChanging != null))
            {
                this.BasinElementRowChanging(this, new BasinElementRowChangeEvent(((BasinElementRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowDeleted(e);
            if ((this.BasinElementRowDeleted != null))
            {
                this.BasinElementRowDeleted(this, new BasinElementRowChangeEvent(((BasinElementRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowDeleting(e);
            if ((this.BasinElementRowDeleting != null))
            {
                this.BasinElementRowDeleting(this, new BasinElementRowChangeEvent(((BasinElementRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void RemoveBasinElementRow(BasinElementRow row)
        {
            this.Rows.Remove(row);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
        {
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            HmsModelResultsDM ds = new HmsModelResultsDM();
            global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
            any1.Namespace = "http://www.w3.org/2001/XMLSchema";
            any1.MinOccurs = new decimal(0);
            any1.MaxOccurs = decimal.MaxValue;
            any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any1);
            global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
            any2.MinOccurs = new decimal(1);
            any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any2);
            global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute1.Name = "namespace";
            attribute1.FixedValue = ds.Namespace;
            type.Attributes.Add(attribute1);
            global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute2.Name = "tableTypeName";
            attribute2.FixedValue = "BasinElementDataTable";
            type.Attributes.Add(attribute2);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace))
            {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try
                {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext();)
                    {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length))
                        {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length)
                                        && (s1.ReadByte() == s2.ReadByte()));)
                            {
                                ;
                            }
                            if ((s1.Position == s1.Length))
                            {
                                return type;
                            }
                        }
                    }
                }
                finally
                {
                    if ((s1 != null))
                    {
                        s1.Close();
                    }
                    if ((s2 != null))
                    {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
    }

    /// <summary>
    ///Represents the strongly named DataTable class.
    ///</summary>
    [global::System.Serializable()]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
    public partial class SubbasinAreaDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable
    {

        private global::System.Data.DataColumn columnarea;

        private global::System.Data.DataColumn columnunits;

        private global::System.Data.DataColumn columnBasinElement_Id;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public SubbasinAreaDataTable()
        {
            this.TableName = "SubbasinArea";
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal SubbasinAreaDataTable(global::System.Data.DataTable table)
        {
            this.TableName = table.TableName;
            if ((table.CaseSensitive != table.DataSet.CaseSensitive))
            {
                this.CaseSensitive = table.CaseSensitive;
            }
            if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
            {
                this.Locale = table.Locale;
            }
            if ((table.Namespace != table.DataSet.Namespace))
            {
                this.Namespace = table.Namespace;
            }
            this.Prefix = table.Prefix;
            this.MinimumCapacity = table.MinimumCapacity;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected SubbasinAreaDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                base(info, context)
        {
            this.InitVars();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn areaColumn
        {
            get
            {
                return this.columnarea;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn unitsColumn
        {
            get
            {
                return this.columnunits;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn BasinElement_IdColumn
        {
            get
            {
                return this.columnBasinElement_Id;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int Count
        {
            get
            {
                return this.Rows.Count;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public SubbasinAreaRow this[int index]
        {
            get
            {
                return ((SubbasinAreaRow)(this.Rows[index]));
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event SubbasinAreaRowChangeEventHandler SubbasinAreaRowChanging;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event SubbasinAreaRowChangeEventHandler SubbasinAreaRowChanged;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event SubbasinAreaRowChangeEventHandler SubbasinAreaRowDeleting;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event SubbasinAreaRowChangeEventHandler SubbasinAreaRowDeleted;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void AddSubbasinAreaRow(SubbasinAreaRow row)
        {
            this.Rows.Add(row);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public SubbasinAreaRow AddSubbasinAreaRow(string area, string units, BasinElementRow parentBasinElementRowByBasinElement_SubbasinArea)
        {
            SubbasinAreaRow rowSubbasinAreaRow = ((SubbasinAreaRow)(this.NewRow()));
            object[] columnValuesArray = new object[] {
                    area,
                    units,
                    null};
            if ((parentBasinElementRowByBasinElement_SubbasinArea != null))
            {
                columnValuesArray[2] = parentBasinElementRowByBasinElement_SubbasinArea[7];
            }
            rowSubbasinAreaRow.ItemArray = columnValuesArray;
            this.Rows.Add(rowSubbasinAreaRow);
            return rowSubbasinAreaRow;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual global::System.Collections.IEnumerator GetEnumerator()
        {
            return this.Rows.GetEnumerator();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataTable Clone()
        {
            SubbasinAreaDataTable cln = ((SubbasinAreaDataTable)(base.Clone()));
            cln.InitVars();
            return cln;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataTable CreateInstance()
        {
            return new SubbasinAreaDataTable();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars()
        {
            this.columnarea = base.Columns["area"];
            this.columnunits = base.Columns["units"];
            this.columnBasinElement_Id = base.Columns["BasinElement_Id"];
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass()
        {
            this.columnarea = new global::System.Data.DataColumn("area", typeof(string), null, global::System.Data.MappingType.Attribute);
            base.Columns.Add(this.columnarea);
            this.columnunits = new global::System.Data.DataColumn("units", typeof(string), null, global::System.Data.MappingType.Attribute);
            base.Columns.Add(this.columnunits);
            this.columnBasinElement_Id = new global::System.Data.DataColumn("BasinElement_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnBasinElement_Id);
            this.columnarea.Namespace = "";
            this.columnunits.Namespace = "";
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public SubbasinAreaRow NewSubbasinAreaRow()
        {
            return ((SubbasinAreaRow)(this.NewRow()));
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
        {
            return new SubbasinAreaRow(builder);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Type GetRowType()
        {
            return typeof(SubbasinAreaRow);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowChanged(e);
            if ((this.SubbasinAreaRowChanged != null))
            {
                this.SubbasinAreaRowChanged(this, new SubbasinAreaRowChangeEvent(((SubbasinAreaRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowChanging(e);
            if ((this.SubbasinAreaRowChanging != null))
            {
                this.SubbasinAreaRowChanging(this, new SubbasinAreaRowChangeEvent(((SubbasinAreaRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowDeleted(e);
            if ((this.SubbasinAreaRowDeleted != null))
            {
                this.SubbasinAreaRowDeleted(this, new SubbasinAreaRowChangeEvent(((SubbasinAreaRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowDeleting(e);
            if ((this.SubbasinAreaRowDeleting != null))
            {
                this.SubbasinAreaRowDeleting(this, new SubbasinAreaRowChangeEvent(((SubbasinAreaRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void RemoveSubbasinAreaRow(SubbasinAreaRow row)
        {
            this.Rows.Remove(row);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
        {
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            HmsModelResultsDM ds = new HmsModelResultsDM();
            global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
            any1.Namespace = "http://www.w3.org/2001/XMLSchema";
            any1.MinOccurs = new decimal(0);
            any1.MaxOccurs = decimal.MaxValue;
            any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any1);
            global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
            any2.MinOccurs = new decimal(1);
            any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any2);
            global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute1.Name = "namespace";
            attribute1.FixedValue = ds.Namespace;
            type.Attributes.Add(attribute1);
            global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute2.Name = "tableTypeName";
            attribute2.FixedValue = "SubbasinAreaDataTable";
            type.Attributes.Add(attribute2);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace))
            {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try
                {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext();)
                    {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length))
                        {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length)
                                        && (s1.ReadByte() == s2.ReadByte()));)
                            {
                                ;
                            }
                            if ((s1.Position == s1.Length))
                            {
                                return type;
                            }
                        }
                    }
                }
                finally
                {
                    if ((s1 != null))
                    {
                        s1.Close();
                    }
                    if ((s2 != null))
                    {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
    }

    /// <summary>
    ///Represents the strongly named DataTable class.
    ///</summary>
    [global::System.Serializable()]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
    public partial class DrainageAreaDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable
    {

        private global::System.Data.DataColumn columnarea;

        private global::System.Data.DataColumn columnunits;

        private global::System.Data.DataColumn columnBasinElement_Id;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DrainageAreaDataTable()
        {
            this.TableName = "DrainageArea";
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal DrainageAreaDataTable(global::System.Data.DataTable table)
        {
            this.TableName = table.TableName;
            if ((table.CaseSensitive != table.DataSet.CaseSensitive))
            {
                this.CaseSensitive = table.CaseSensitive;
            }
            if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
            {
                this.Locale = table.Locale;
            }
            if ((table.Namespace != table.DataSet.Namespace))
            {
                this.Namespace = table.Namespace;
            }
            this.Prefix = table.Prefix;
            this.MinimumCapacity = table.MinimumCapacity;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected DrainageAreaDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                base(info, context)
        {
            this.InitVars();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn areaColumn
        {
            get
            {
                return this.columnarea;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn unitsColumn
        {
            get
            {
                return this.columnunits;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn BasinElement_IdColumn
        {
            get
            {
                return this.columnBasinElement_Id;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int Count
        {
            get
            {
                return this.Rows.Count;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DrainageAreaRow this[int index]
        {
            get
            {
                return ((DrainageAreaRow)(this.Rows[index]));
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event DrainageAreaRowChangeEventHandler DrainageAreaRowChanging;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event DrainageAreaRowChangeEventHandler DrainageAreaRowChanged;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event DrainageAreaRowChangeEventHandler DrainageAreaRowDeleting;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event DrainageAreaRowChangeEventHandler DrainageAreaRowDeleted;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void AddDrainageAreaRow(DrainageAreaRow row)
        {
            this.Rows.Add(row);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DrainageAreaRow AddDrainageAreaRow(string area, string units, BasinElementRow parentBasinElementRowByBasinElement_DrainageArea)
        {
            DrainageAreaRow rowDrainageAreaRow = ((DrainageAreaRow)(this.NewRow()));
            object[] columnValuesArray = new object[] {
                    area,
                    units,
                    null};
            if ((parentBasinElementRowByBasinElement_DrainageArea != null))
            {
                columnValuesArray[2] = parentBasinElementRowByBasinElement_DrainageArea[7];
            }
            rowDrainageAreaRow.ItemArray = columnValuesArray;
            this.Rows.Add(rowDrainageAreaRow);
            return rowDrainageAreaRow;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual global::System.Collections.IEnumerator GetEnumerator()
        {
            return this.Rows.GetEnumerator();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataTable Clone()
        {
            DrainageAreaDataTable cln = ((DrainageAreaDataTable)(base.Clone()));
            cln.InitVars();
            return cln;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataTable CreateInstance()
        {
            return new DrainageAreaDataTable();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars()
        {
            this.columnarea = base.Columns["area"];
            this.columnunits = base.Columns["units"];
            this.columnBasinElement_Id = base.Columns["BasinElement_Id"];
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass()
        {
            this.columnarea = new global::System.Data.DataColumn("area", typeof(string), null, global::System.Data.MappingType.Attribute);
            base.Columns.Add(this.columnarea);
            this.columnunits = new global::System.Data.DataColumn("units", typeof(string), null, global::System.Data.MappingType.Attribute);
            base.Columns.Add(this.columnunits);
            this.columnBasinElement_Id = new global::System.Data.DataColumn("BasinElement_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnBasinElement_Id);
            this.columnarea.Namespace = "";
            this.columnunits.Namespace = "";
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DrainageAreaRow NewDrainageAreaRow()
        {
            return ((DrainageAreaRow)(this.NewRow()));
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
        {
            return new DrainageAreaRow(builder);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Type GetRowType()
        {
            return typeof(DrainageAreaRow);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowChanged(e);
            if ((this.DrainageAreaRowChanged != null))
            {
                this.DrainageAreaRowChanged(this, new DrainageAreaRowChangeEvent(((DrainageAreaRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowChanging(e);
            if ((this.DrainageAreaRowChanging != null))
            {
                this.DrainageAreaRowChanging(this, new DrainageAreaRowChangeEvent(((DrainageAreaRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowDeleted(e);
            if ((this.DrainageAreaRowDeleted != null))
            {
                this.DrainageAreaRowDeleted(this, new DrainageAreaRowChangeEvent(((DrainageAreaRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowDeleting(e);
            if ((this.DrainageAreaRowDeleting != null))
            {
                this.DrainageAreaRowDeleting(this, new DrainageAreaRowChangeEvent(((DrainageAreaRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void RemoveDrainageAreaRow(DrainageAreaRow row)
        {
            this.Rows.Remove(row);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
        {
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            HmsModelResultsDM ds = new HmsModelResultsDM();
            global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
            any1.Namespace = "http://www.w3.org/2001/XMLSchema";
            any1.MinOccurs = new decimal(0);
            any1.MaxOccurs = decimal.MaxValue;
            any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any1);
            global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
            any2.MinOccurs = new decimal(1);
            any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any2);
            global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute1.Name = "namespace";
            attribute1.FixedValue = ds.Namespace;
            type.Attributes.Add(attribute1);
            global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute2.Name = "tableTypeName";
            attribute2.FixedValue = "DrainageAreaDataTable";
            type.Attributes.Add(attribute2);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace))
            {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try
                {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext();)
                    {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length))
                        {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length)
                                        && (s1.ReadByte() == s2.ReadByte()));)
                            {
                                ;
                            }
                            if ((s1.Position == s1.Length))
                            {
                                return type;
                            }
                        }
                    }
                }
                finally
                {
                    if ((s1 != null))
                    {
                        s1.Close();
                    }
                    if ((s2 != null))
                    {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
    }

    /// <summary>
    ///Represents the strongly named DataTable class.
    ///</summary>
    [global::System.Serializable()]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
    public partial class FlowLinkDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable
    {

        private global::System.Data.DataColumn columnupstreamName;

        private global::System.Data.DataColumn columnBasinElement_Id;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public FlowLinkDataTable()
        {
            this.TableName = "FlowLink";
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal FlowLinkDataTable(global::System.Data.DataTable table)
        {
            this.TableName = table.TableName;
            if ((table.CaseSensitive != table.DataSet.CaseSensitive))
            {
                this.CaseSensitive = table.CaseSensitive;
            }
            if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
            {
                this.Locale = table.Locale;
            }
            if ((table.Namespace != table.DataSet.Namespace))
            {
                this.Namespace = table.Namespace;
            }
            this.Prefix = table.Prefix;
            this.MinimumCapacity = table.MinimumCapacity;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected FlowLinkDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                base(info, context)
        {
            this.InitVars();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn upstreamNameColumn
        {
            get
            {
                return this.columnupstreamName;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn BasinElement_IdColumn
        {
            get
            {
                return this.columnBasinElement_Id;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int Count
        {
            get
            {
                return this.Rows.Count;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public FlowLinkRow this[int index]
        {
            get
            {
                return ((FlowLinkRow)(this.Rows[index]));
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event FlowLinkRowChangeEventHandler FlowLinkRowChanging;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event FlowLinkRowChangeEventHandler FlowLinkRowChanged;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event FlowLinkRowChangeEventHandler FlowLinkRowDeleting;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event FlowLinkRowChangeEventHandler FlowLinkRowDeleted;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void AddFlowLinkRow(FlowLinkRow row)
        {
            this.Rows.Add(row);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public FlowLinkRow AddFlowLinkRow(string upstreamName, BasinElementRow parentBasinElementRowByBasinElement_FlowLink)
        {
            FlowLinkRow rowFlowLinkRow = ((FlowLinkRow)(this.NewRow()));
            object[] columnValuesArray = new object[] {
                    upstreamName,
                    null};
            if ((parentBasinElementRowByBasinElement_FlowLink != null))
            {
                columnValuesArray[1] = parentBasinElementRowByBasinElement_FlowLink[7];
            }
            rowFlowLinkRow.ItemArray = columnValuesArray;
            this.Rows.Add(rowFlowLinkRow);
            return rowFlowLinkRow;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual global::System.Collections.IEnumerator GetEnumerator()
        {
            return this.Rows.GetEnumerator();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataTable Clone()
        {
            FlowLinkDataTable cln = ((FlowLinkDataTable)(base.Clone()));
            cln.InitVars();
            return cln;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataTable CreateInstance()
        {
            return new FlowLinkDataTable();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars()
        {
            this.columnupstreamName = base.Columns["upstreamName"];
            this.columnBasinElement_Id = base.Columns["BasinElement_Id"];
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass()
        {
            this.columnupstreamName = new global::System.Data.DataColumn("upstreamName", typeof(string), null, global::System.Data.MappingType.Attribute);
            base.Columns.Add(this.columnupstreamName);
            this.columnBasinElement_Id = new global::System.Data.DataColumn("BasinElement_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnBasinElement_Id);
            this.columnupstreamName.Namespace = "";
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public FlowLinkRow NewFlowLinkRow()
        {
            return ((FlowLinkRow)(this.NewRow()));
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
        {
            return new FlowLinkRow(builder);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Type GetRowType()
        {
            return typeof(FlowLinkRow);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowChanged(e);
            if ((this.FlowLinkRowChanged != null))
            {
                this.FlowLinkRowChanged(this, new FlowLinkRowChangeEvent(((FlowLinkRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowChanging(e);
            if ((this.FlowLinkRowChanging != null))
            {
                this.FlowLinkRowChanging(this, new FlowLinkRowChangeEvent(((FlowLinkRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowDeleted(e);
            if ((this.FlowLinkRowDeleted != null))
            {
                this.FlowLinkRowDeleted(this, new FlowLinkRowChangeEvent(((FlowLinkRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowDeleting(e);
            if ((this.FlowLinkRowDeleting != null))
            {
                this.FlowLinkRowDeleting(this, new FlowLinkRowChangeEvent(((FlowLinkRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void RemoveFlowLinkRow(FlowLinkRow row)
        {
            this.Rows.Remove(row);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
        {
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            HmsModelResultsDM ds = new HmsModelResultsDM();
            global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
            any1.Namespace = "http://www.w3.org/2001/XMLSchema";
            any1.MinOccurs = new decimal(0);
            any1.MaxOccurs = decimal.MaxValue;
            any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any1);
            global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
            any2.MinOccurs = new decimal(1);
            any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any2);
            global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute1.Name = "namespace";
            attribute1.FixedValue = ds.Namespace;
            type.Attributes.Add(attribute1);
            global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute2.Name = "tableTypeName";
            attribute2.FixedValue = "FlowLinkDataTable";
            type.Attributes.Add(attribute2);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace))
            {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try
                {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext();)
                    {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length))
                        {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length)
                                        && (s1.ReadByte() == s2.ReadByte()));)
                            {
                                ;
                            }
                            if ((s1.Position == s1.Length))
                            {
                                return type;
                            }
                        }
                    }
                }
                finally
                {
                    if ((s1 != null))
                    {
                        s1.Close();
                    }
                    if ((s2 != null))
                    {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
    }

    /// <summary>
    ///Represents the strongly named DataTable class.
    ///</summary>
    [global::System.Serializable()]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
    public partial class HydrologyDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable
    {

        private global::System.Data.DataColumn columnHydrology_Id;

        private global::System.Data.DataColumn columnBasinElement_Id;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public HydrologyDataTable()
        {
            this.TableName = "Hydrology";
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal HydrologyDataTable(global::System.Data.DataTable table)
        {
            this.TableName = table.TableName;
            if ((table.CaseSensitive != table.DataSet.CaseSensitive))
            {
                this.CaseSensitive = table.CaseSensitive;
            }
            if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
            {
                this.Locale = table.Locale;
            }
            if ((table.Namespace != table.DataSet.Namespace))
            {
                this.Namespace = table.Namespace;
            }
            this.Prefix = table.Prefix;
            this.MinimumCapacity = table.MinimumCapacity;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected HydrologyDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                base(info, context)
        {
            this.InitVars();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn Hydrology_IdColumn
        {
            get
            {
                return this.columnHydrology_Id;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn BasinElement_IdColumn
        {
            get
            {
                return this.columnBasinElement_Id;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int Count
        {
            get
            {
                return this.Rows.Count;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public HydrologyRow this[int index]
        {
            get
            {
                return ((HydrologyRow)(this.Rows[index]));
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event HydrologyRowChangeEventHandler HydrologyRowChanging;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event HydrologyRowChangeEventHandler HydrologyRowChanged;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event HydrologyRowChangeEventHandler HydrologyRowDeleting;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event HydrologyRowChangeEventHandler HydrologyRowDeleted;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void AddHydrologyRow(HydrologyRow row)
        {
            this.Rows.Add(row);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public HydrologyRow AddHydrologyRow(BasinElementRow parentBasinElementRowByBasinElement_Hydrology)
        {
            HydrologyRow rowHydrologyRow = ((HydrologyRow)(this.NewRow()));
            object[] columnValuesArray = new object[] {
                    null,
                    null};
            if ((parentBasinElementRowByBasinElement_Hydrology != null))
            {
                columnValuesArray[1] = parentBasinElementRowByBasinElement_Hydrology[7];
            }
            rowHydrologyRow.ItemArray = columnValuesArray;
            this.Rows.Add(rowHydrologyRow);
            return rowHydrologyRow;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual global::System.Collections.IEnumerator GetEnumerator()
        {
            return this.Rows.GetEnumerator();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataTable Clone()
        {
            HydrologyDataTable cln = ((HydrologyDataTable)(base.Clone()));
            cln.InitVars();
            return cln;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataTable CreateInstance()
        {
            return new HydrologyDataTable();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars()
        {
            this.columnHydrology_Id = base.Columns["Hydrology_Id"];
            this.columnBasinElement_Id = base.Columns["BasinElement_Id"];
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass()
        {
            this.columnHydrology_Id = new global::System.Data.DataColumn("Hydrology_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnHydrology_Id);
            this.columnBasinElement_Id = new global::System.Data.DataColumn("BasinElement_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnBasinElement_Id);
            this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                            this.columnHydrology_Id}, true));
            this.columnHydrology_Id.AutoIncrement = true;
            this.columnHydrology_Id.AllowDBNull = false;
            this.columnHydrology_Id.Unique = true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public HydrologyRow NewHydrologyRow()
        {
            return ((HydrologyRow)(this.NewRow()));
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
        {
            return new HydrologyRow(builder);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Type GetRowType()
        {
            return typeof(HydrologyRow);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowChanged(e);
            if ((this.HydrologyRowChanged != null))
            {
                this.HydrologyRowChanged(this, new HydrologyRowChangeEvent(((HydrologyRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowChanging(e);
            if ((this.HydrologyRowChanging != null))
            {
                this.HydrologyRowChanging(this, new HydrologyRowChangeEvent(((HydrologyRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowDeleted(e);
            if ((this.HydrologyRowDeleted != null))
            {
                this.HydrologyRowDeleted(this, new HydrologyRowChangeEvent(((HydrologyRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowDeleting(e);
            if ((this.HydrologyRowDeleting != null))
            {
                this.HydrologyRowDeleting(this, new HydrologyRowChangeEvent(((HydrologyRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void RemoveHydrologyRow(HydrologyRow row)
        {
            this.Rows.Remove(row);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
        {
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            HmsModelResultsDM ds = new HmsModelResultsDM();
            global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
            any1.Namespace = "http://www.w3.org/2001/XMLSchema";
            any1.MinOccurs = new decimal(0);
            any1.MaxOccurs = decimal.MaxValue;
            any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any1);
            global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
            any2.MinOccurs = new decimal(1);
            any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any2);
            global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute1.Name = "namespace";
            attribute1.FixedValue = ds.Namespace;
            type.Attributes.Add(attribute1);
            global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute2.Name = "tableTypeName";
            attribute2.FixedValue = "HydrologyDataTable";
            type.Attributes.Add(attribute2);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace))
            {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try
                {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext();)
                    {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length))
                        {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length)
                                        && (s1.ReadByte() == s2.ReadByte()));)
                            {
                                ;
                            }
                            if ((s1.Position == s1.Length))
                            {
                                return type;
                            }
                        }
                    }
                }
                finally
                {
                    if ((s1 != null))
                    {
                        s1.Close();
                    }
                    if ((s2 != null))
                    {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
    }

    /// <summary>
    ///Represents the strongly named DataTable class.
    ///</summary>
    [global::System.Serializable()]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
    public partial class TimeSeriesDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable
    {

        private global::System.Data.DataColumn columnDssFileName;

        private global::System.Data.DataColumn columnDssPathname;

        private global::System.Data.DataColumn columnTimeSeries_Id;

        private global::System.Data.DataColumn columnHydrology_Id;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TimeSeriesDataTable()
        {
            this.TableName = "TimeSeries";
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal TimeSeriesDataTable(global::System.Data.DataTable table)
        {
            this.TableName = table.TableName;
            if ((table.CaseSensitive != table.DataSet.CaseSensitive))
            {
                this.CaseSensitive = table.CaseSensitive;
            }
            if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
            {
                this.Locale = table.Locale;
            }
            if ((table.Namespace != table.DataSet.Namespace))
            {
                this.Namespace = table.Namespace;
            }
            this.Prefix = table.Prefix;
            this.MinimumCapacity = table.MinimumCapacity;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected TimeSeriesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                base(info, context)
        {
            this.InitVars();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn DssFileNameColumn
        {
            get
            {
                return this.columnDssFileName;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn DssPathnameColumn
        {
            get
            {
                return this.columnDssPathname;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn TimeSeries_IdColumn
        {
            get
            {
                return this.columnTimeSeries_Id;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn Hydrology_IdColumn
        {
            get
            {
                return this.columnHydrology_Id;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int Count
        {
            get
            {
                return this.Rows.Count;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TimeSeriesRow this[int index]
        {
            get
            {
                return ((TimeSeriesRow)(this.Rows[index]));
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event TimeSeriesRowChangeEventHandler TimeSeriesRowChanging;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event TimeSeriesRowChangeEventHandler TimeSeriesRowChanged;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event TimeSeriesRowChangeEventHandler TimeSeriesRowDeleting;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event TimeSeriesRowChangeEventHandler TimeSeriesRowDeleted;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void AddTimeSeriesRow(TimeSeriesRow row)
        {
            this.Rows.Add(row);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TimeSeriesRow AddTimeSeriesRow(string DssFileName, string DssPathname, HydrologyRow parentHydrologyRowByHydrology_TimeSeries)
        {
            TimeSeriesRow rowTimeSeriesRow = ((TimeSeriesRow)(this.NewRow()));
            object[] columnValuesArray = new object[] {
                    DssFileName,
                    DssPathname,
                    null,
                    null};
            if ((parentHydrologyRowByHydrology_TimeSeries != null))
            {
                columnValuesArray[3] = parentHydrologyRowByHydrology_TimeSeries[0];
            }
            rowTimeSeriesRow.ItemArray = columnValuesArray;
            this.Rows.Add(rowTimeSeriesRow);
            return rowTimeSeriesRow;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual global::System.Collections.IEnumerator GetEnumerator()
        {
            return this.Rows.GetEnumerator();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataTable Clone()
        {
            TimeSeriesDataTable cln = ((TimeSeriesDataTable)(base.Clone()));
            cln.InitVars();
            return cln;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataTable CreateInstance()
        {
            return new TimeSeriesDataTable();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars()
        {
            this.columnDssFileName = base.Columns["DssFileName"];
            this.columnDssPathname = base.Columns["DssPathname"];
            this.columnTimeSeries_Id = base.Columns["TimeSeries_Id"];
            this.columnHydrology_Id = base.Columns["Hydrology_Id"];
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass()
        {
            this.columnDssFileName = new global::System.Data.DataColumn("DssFileName", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnDssFileName);
            this.columnDssPathname = new global::System.Data.DataColumn("DssPathname", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnDssPathname);
            this.columnTimeSeries_Id = new global::System.Data.DataColumn("TimeSeries_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnTimeSeries_Id);
            this.columnHydrology_Id = new global::System.Data.DataColumn("Hydrology_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnHydrology_Id);
            this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                            this.columnTimeSeries_Id}, true));
            this.columnTimeSeries_Id.AutoIncrement = true;
            this.columnTimeSeries_Id.AllowDBNull = false;
            this.columnTimeSeries_Id.Unique = true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TimeSeriesRow NewTimeSeriesRow()
        {
            return ((TimeSeriesRow)(this.NewRow()));
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
        {
            return new TimeSeriesRow(builder);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Type GetRowType()
        {
            return typeof(TimeSeriesRow);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowChanged(e);
            if ((this.TimeSeriesRowChanged != null))
            {
                this.TimeSeriesRowChanged(this, new TimeSeriesRowChangeEvent(((TimeSeriesRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowChanging(e);
            if ((this.TimeSeriesRowChanging != null))
            {
                this.TimeSeriesRowChanging(this, new TimeSeriesRowChangeEvent(((TimeSeriesRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowDeleted(e);
            if ((this.TimeSeriesRowDeleted != null))
            {
                this.TimeSeriesRowDeleted(this, new TimeSeriesRowChangeEvent(((TimeSeriesRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowDeleting(e);
            if ((this.TimeSeriesRowDeleting != null))
            {
                this.TimeSeriesRowDeleting(this, new TimeSeriesRowChangeEvent(((TimeSeriesRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void RemoveTimeSeriesRow(TimeSeriesRow row)
        {
            this.Rows.Remove(row);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
        {
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            HmsModelResultsDM ds = new HmsModelResultsDM();
            global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
            any1.Namespace = "http://www.w3.org/2001/XMLSchema";
            any1.MinOccurs = new decimal(0);
            any1.MaxOccurs = decimal.MaxValue;
            any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any1);
            global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
            any2.MinOccurs = new decimal(1);
            any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any2);
            global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute1.Name = "namespace";
            attribute1.FixedValue = ds.Namespace;
            type.Attributes.Add(attribute1);
            global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute2.Name = "tableTypeName";
            attribute2.FixedValue = "TimeSeriesDataTable";
            type.Attributes.Add(attribute2);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace))
            {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try
                {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext();)
                    {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length))
                        {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length)
                                        && (s1.ReadByte() == s2.ReadByte()));)
                            {
                                ;
                            }
                            if ((s1.Position == s1.Length))
                            {
                                return type;
                            }
                        }
                    }
                }
                finally
                {
                    if ((s1 != null))
                    {
                        s1.Close();
                    }
                    if ((s2 != null))
                    {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
    }

    /// <summary>
    ///Represents the strongly named DataTable class.
    ///</summary>
    [global::System.Serializable()]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
    public partial class TimeSeriesTypeDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable
    {

        private global::System.Data.DataColumn columntype;

        private global::System.Data.DataColumn columndisplayString;

        private global::System.Data.DataColumn columnTimeSeries_Id;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TimeSeriesTypeDataTable()
        {
            this.TableName = "TimeSeriesType";
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal TimeSeriesTypeDataTable(global::System.Data.DataTable table)
        {
            this.TableName = table.TableName;
            if ((table.CaseSensitive != table.DataSet.CaseSensitive))
            {
                this.CaseSensitive = table.CaseSensitive;
            }
            if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
            {
                this.Locale = table.Locale;
            }
            if ((table.Namespace != table.DataSet.Namespace))
            {
                this.Namespace = table.Namespace;
            }
            this.Prefix = table.Prefix;
            this.MinimumCapacity = table.MinimumCapacity;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected TimeSeriesTypeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                base(info, context)
        {
            this.InitVars();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn typeColumn
        {
            get
            {
                return this.columntype;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn displayStringColumn
        {
            get
            {
                return this.columndisplayString;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn TimeSeries_IdColumn
        {
            get
            {
                return this.columnTimeSeries_Id;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int Count
        {
            get
            {
                return this.Rows.Count;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TimeSeriesTypeRow this[int index]
        {
            get
            {
                return ((TimeSeriesTypeRow)(this.Rows[index]));
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event TimeSeriesTypeRowChangeEventHandler TimeSeriesTypeRowChanging;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event TimeSeriesTypeRowChangeEventHandler TimeSeriesTypeRowChanged;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event TimeSeriesTypeRowChangeEventHandler TimeSeriesTypeRowDeleting;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event TimeSeriesTypeRowChangeEventHandler TimeSeriesTypeRowDeleted;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void AddTimeSeriesTypeRow(TimeSeriesTypeRow row)
        {
            this.Rows.Add(row);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TimeSeriesTypeRow AddTimeSeriesTypeRow(string type, string displayString, TimeSeriesRow parentTimeSeriesRowByTimeSeries_TimeSeriesType)
        {
            TimeSeriesTypeRow rowTimeSeriesTypeRow = ((TimeSeriesTypeRow)(this.NewRow()));
            object[] columnValuesArray = new object[] {
                    type,
                    displayString,
                    null};
            if ((parentTimeSeriesRowByTimeSeries_TimeSeriesType != null))
            {
                columnValuesArray[2] = parentTimeSeriesRowByTimeSeries_TimeSeriesType[2];
            }
            rowTimeSeriesTypeRow.ItemArray = columnValuesArray;
            this.Rows.Add(rowTimeSeriesTypeRow);
            return rowTimeSeriesTypeRow;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual global::System.Collections.IEnumerator GetEnumerator()
        {
            return this.Rows.GetEnumerator();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataTable Clone()
        {
            TimeSeriesTypeDataTable cln = ((TimeSeriesTypeDataTable)(base.Clone()));
            cln.InitVars();
            return cln;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataTable CreateInstance()
        {
            return new TimeSeriesTypeDataTable();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars()
        {
            this.columntype = base.Columns["type"];
            this.columndisplayString = base.Columns["displayString"];
            this.columnTimeSeries_Id = base.Columns["TimeSeries_Id"];
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass()
        {
            this.columntype = new global::System.Data.DataColumn("type", typeof(string), null, global::System.Data.MappingType.Attribute);
            base.Columns.Add(this.columntype);
            this.columndisplayString = new global::System.Data.DataColumn("displayString", typeof(string), null, global::System.Data.MappingType.Attribute);
            base.Columns.Add(this.columndisplayString);
            this.columnTimeSeries_Id = new global::System.Data.DataColumn("TimeSeries_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnTimeSeries_Id);
            this.columntype.Namespace = "";
            this.columndisplayString.Namespace = "";
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TimeSeriesTypeRow NewTimeSeriesTypeRow()
        {
            return ((TimeSeriesTypeRow)(this.NewRow()));
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
        {
            return new TimeSeriesTypeRow(builder);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Type GetRowType()
        {
            return typeof(TimeSeriesTypeRow);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowChanged(e);
            if ((this.TimeSeriesTypeRowChanged != null))
            {
                this.TimeSeriesTypeRowChanged(this, new TimeSeriesTypeRowChangeEvent(((TimeSeriesTypeRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowChanging(e);
            if ((this.TimeSeriesTypeRowChanging != null))
            {
                this.TimeSeriesTypeRowChanging(this, new TimeSeriesTypeRowChangeEvent(((TimeSeriesTypeRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowDeleted(e);
            if ((this.TimeSeriesTypeRowDeleted != null))
            {
                this.TimeSeriesTypeRowDeleted(this, new TimeSeriesTypeRowChangeEvent(((TimeSeriesTypeRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowDeleting(e);
            if ((this.TimeSeriesTypeRowDeleting != null))
            {
                this.TimeSeriesTypeRowDeleting(this, new TimeSeriesTypeRowChangeEvent(((TimeSeriesTypeRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void RemoveTimeSeriesTypeRow(TimeSeriesTypeRow row)
        {
            this.Rows.Remove(row);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
        {
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            HmsModelResultsDM ds = new HmsModelResultsDM();
            global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
            any1.Namespace = "http://www.w3.org/2001/XMLSchema";
            any1.MinOccurs = new decimal(0);
            any1.MaxOccurs = decimal.MaxValue;
            any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any1);
            global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
            any2.MinOccurs = new decimal(1);
            any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any2);
            global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute1.Name = "namespace";
            attribute1.FixedValue = ds.Namespace;
            type.Attributes.Add(attribute1);
            global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute2.Name = "tableTypeName";
            attribute2.FixedValue = "TimeSeriesTypeDataTable";
            type.Attributes.Add(attribute2);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace))
            {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try
                {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext();)
                    {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length))
                        {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length)
                                        && (s1.ReadByte() == s2.ReadByte()));)
                            {
                                ;
                            }
                            if ((s1.Position == s1.Length))
                            {
                                return type;
                            }
                        }
                    }
                }
                finally
                {
                    if ((s1 != null))
                    {
                        s1.Close();
                    }
                    if ((s2 != null))
                    {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
    }

    /// <summary>
    ///Represents the strongly named DataTable class.
    ///</summary>
    [global::System.Serializable()]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
    public partial class StatisticsDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable
    {

        private global::System.Data.DataColumn columnStatistics_Id;

        private global::System.Data.DataColumn columnBasinElement_Id;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public StatisticsDataTable()
        {
            this.TableName = "Statistics";
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal StatisticsDataTable(global::System.Data.DataTable table)
        {
            this.TableName = table.TableName;
            if ((table.CaseSensitive != table.DataSet.CaseSensitive))
            {
                this.CaseSensitive = table.CaseSensitive;
            }
            if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
            {
                this.Locale = table.Locale;
            }
            if ((table.Namespace != table.DataSet.Namespace))
            {
                this.Namespace = table.Namespace;
            }
            this.Prefix = table.Prefix;
            this.MinimumCapacity = table.MinimumCapacity;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected StatisticsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                base(info, context)
        {
            this.InitVars();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn Statistics_IdColumn
        {
            get
            {
                return this.columnStatistics_Id;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn BasinElement_IdColumn
        {
            get
            {
                return this.columnBasinElement_Id;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int Count
        {
            get
            {
                return this.Rows.Count;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public StatisticsRow this[int index]
        {
            get
            {
                return ((StatisticsRow)(this.Rows[index]));
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event StatisticsRowChangeEventHandler StatisticsRowChanging;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event StatisticsRowChangeEventHandler StatisticsRowChanged;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event StatisticsRowChangeEventHandler StatisticsRowDeleting;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event StatisticsRowChangeEventHandler StatisticsRowDeleted;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void AddStatisticsRow(StatisticsRow row)
        {
            this.Rows.Add(row);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public StatisticsRow AddStatisticsRow(BasinElementRow parentBasinElementRowByBasinElement_Statistics)
        {
            StatisticsRow rowStatisticsRow = ((StatisticsRow)(this.NewRow()));
            object[] columnValuesArray = new object[] {
                    null,
                    null};
            if ((parentBasinElementRowByBasinElement_Statistics != null))
            {
                columnValuesArray[1] = parentBasinElementRowByBasinElement_Statistics[7];
            }
            rowStatisticsRow.ItemArray = columnValuesArray;
            this.Rows.Add(rowStatisticsRow);
            return rowStatisticsRow;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual global::System.Collections.IEnumerator GetEnumerator()
        {
            return this.Rows.GetEnumerator();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataTable Clone()
        {
            StatisticsDataTable cln = ((StatisticsDataTable)(base.Clone()));
            cln.InitVars();
            return cln;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataTable CreateInstance()
        {
            return new StatisticsDataTable();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars()
        {
            this.columnStatistics_Id = base.Columns["Statistics_Id"];
            this.columnBasinElement_Id = base.Columns["BasinElement_Id"];
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass()
        {
            this.columnStatistics_Id = new global::System.Data.DataColumn("Statistics_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnStatistics_Id);
            this.columnBasinElement_Id = new global::System.Data.DataColumn("BasinElement_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnBasinElement_Id);
            this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                            this.columnStatistics_Id}, true));
            this.columnStatistics_Id.AutoIncrement = true;
            this.columnStatistics_Id.AllowDBNull = false;
            this.columnStatistics_Id.Unique = true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public StatisticsRow NewStatisticsRow()
        {
            return ((StatisticsRow)(this.NewRow()));
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
        {
            return new StatisticsRow(builder);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Type GetRowType()
        {
            return typeof(StatisticsRow);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowChanged(e);
            if ((this.StatisticsRowChanged != null))
            {
                this.StatisticsRowChanged(this, new StatisticsRowChangeEvent(((StatisticsRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowChanging(e);
            if ((this.StatisticsRowChanging != null))
            {
                this.StatisticsRowChanging(this, new StatisticsRowChangeEvent(((StatisticsRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowDeleted(e);
            if ((this.StatisticsRowDeleted != null))
            {
                this.StatisticsRowDeleted(this, new StatisticsRowChangeEvent(((StatisticsRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowDeleting(e);
            if ((this.StatisticsRowDeleting != null))
            {
                this.StatisticsRowDeleting(this, new StatisticsRowChangeEvent(((StatisticsRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void RemoveStatisticsRow(StatisticsRow row)
        {
            this.Rows.Remove(row);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
        {
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            HmsModelResultsDM ds = new HmsModelResultsDM();
            global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
            any1.Namespace = "http://www.w3.org/2001/XMLSchema";
            any1.MinOccurs = new decimal(0);
            any1.MaxOccurs = decimal.MaxValue;
            any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any1);
            global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
            any2.MinOccurs = new decimal(1);
            any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any2);
            global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute1.Name = "namespace";
            attribute1.FixedValue = ds.Namespace;
            type.Attributes.Add(attribute1);
            global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute2.Name = "tableTypeName";
            attribute2.FixedValue = "StatisticsDataTable";
            type.Attributes.Add(attribute2);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace))
            {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try
                {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext();)
                    {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length))
                        {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length)
                                        && (s1.ReadByte() == s2.ReadByte()));)
                            {
                                ;
                            }
                            if ((s1.Position == s1.Length))
                            {
                                return type;
                            }
                        }
                    }
                }
                finally
                {
                    if ((s1 != null))
                    {
                        s1.Close();
                    }
                    if ((s2 != null))
                    {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
    }

    /// <summary>
    ///Represents the strongly named DataTable class.
    ///</summary>
    [global::System.Serializable()]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
    public partial class StatisticMeasureDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable
    {

        private global::System.Data.DataColumn columntype;

        private global::System.Data.DataColumn columndisplayString;

        private global::System.Data.DataColumn columnvalue;

        private global::System.Data.DataColumn columnunits;

        private global::System.Data.DataColumn columnStatistics_Id;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public StatisticMeasureDataTable()
        {
            this.TableName = "StatisticMeasure";
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal StatisticMeasureDataTable(global::System.Data.DataTable table)
        {
            this.TableName = table.TableName;
            if ((table.CaseSensitive != table.DataSet.CaseSensitive))
            {
                this.CaseSensitive = table.CaseSensitive;
            }
            if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
            {
                this.Locale = table.Locale;
            }
            if ((table.Namespace != table.DataSet.Namespace))
            {
                this.Namespace = table.Namespace;
            }
            this.Prefix = table.Prefix;
            this.MinimumCapacity = table.MinimumCapacity;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected StatisticMeasureDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                base(info, context)
        {
            this.InitVars();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn typeColumn
        {
            get
            {
                return this.columntype;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn displayStringColumn
        {
            get
            {
                return this.columndisplayString;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn valueColumn
        {
            get
            {
                return this.columnvalue;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn unitsColumn
        {
            get
            {
                return this.columnunits;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn Statistics_IdColumn
        {
            get
            {
                return this.columnStatistics_Id;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int Count
        {
            get
            {
                return this.Rows.Count;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public StatisticMeasureRow this[int index]
        {
            get
            {
                return ((StatisticMeasureRow)(this.Rows[index]));
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event StatisticMeasureRowChangeEventHandler StatisticMeasureRowChanging;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event StatisticMeasureRowChangeEventHandler StatisticMeasureRowChanged;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event StatisticMeasureRowChangeEventHandler StatisticMeasureRowDeleting;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event StatisticMeasureRowChangeEventHandler StatisticMeasureRowDeleted;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void AddStatisticMeasureRow(StatisticMeasureRow row)
        {
            this.Rows.Add(row);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public StatisticMeasureRow AddStatisticMeasureRow(string type, string displayString, string value, string units, StatisticsRow parentStatisticsRowByStatistics_StatisticMeasure)
        {
            StatisticMeasureRow rowStatisticMeasureRow = ((StatisticMeasureRow)(this.NewRow()));
            object[] columnValuesArray = new object[] {
                    type,
                    displayString,
                    value,
                    units,
                    null};
            if ((parentStatisticsRowByStatistics_StatisticMeasure != null))
            {
                columnValuesArray[4] = parentStatisticsRowByStatistics_StatisticMeasure[0];
            }
            rowStatisticMeasureRow.ItemArray = columnValuesArray;
            this.Rows.Add(rowStatisticMeasureRow);
            return rowStatisticMeasureRow;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual global::System.Collections.IEnumerator GetEnumerator()
        {
            return this.Rows.GetEnumerator();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataTable Clone()
        {
            StatisticMeasureDataTable cln = ((StatisticMeasureDataTable)(base.Clone()));
            cln.InitVars();
            return cln;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataTable CreateInstance()
        {
            return new StatisticMeasureDataTable();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars()
        {
            this.columntype = base.Columns["type"];
            this.columndisplayString = base.Columns["displayString"];
            this.columnvalue = base.Columns["value"];
            this.columnunits = base.Columns["units"];
            this.columnStatistics_Id = base.Columns["Statistics_Id"];
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass()
        {
            this.columntype = new global::System.Data.DataColumn("type", typeof(string), null, global::System.Data.MappingType.Attribute);
            base.Columns.Add(this.columntype);
            this.columndisplayString = new global::System.Data.DataColumn("displayString", typeof(string), null, global::System.Data.MappingType.Attribute);
            base.Columns.Add(this.columndisplayString);
            this.columnvalue = new global::System.Data.DataColumn("value", typeof(string), null, global::System.Data.MappingType.Attribute);
            base.Columns.Add(this.columnvalue);
            this.columnunits = new global::System.Data.DataColumn("units", typeof(string), null, global::System.Data.MappingType.Attribute);
            base.Columns.Add(this.columnunits);
            this.columnStatistics_Id = new global::System.Data.DataColumn("Statistics_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnStatistics_Id);
            this.columntype.Namespace = "";
            this.columndisplayString.Namespace = "";
            this.columnvalue.Namespace = "";
            this.columnunits.Namespace = "";
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public StatisticMeasureRow NewStatisticMeasureRow()
        {
            return ((StatisticMeasureRow)(this.NewRow()));
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
        {
            return new StatisticMeasureRow(builder);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Type GetRowType()
        {
            return typeof(StatisticMeasureRow);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowChanged(e);
            if ((this.StatisticMeasureRowChanged != null))
            {
                this.StatisticMeasureRowChanged(this, new StatisticMeasureRowChangeEvent(((StatisticMeasureRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowChanging(e);
            if ((this.StatisticMeasureRowChanging != null))
            {
                this.StatisticMeasureRowChanging(this, new StatisticMeasureRowChangeEvent(((StatisticMeasureRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowDeleted(e);
            if ((this.StatisticMeasureRowDeleted != null))
            {
                this.StatisticMeasureRowDeleted(this, new StatisticMeasureRowChangeEvent(((StatisticMeasureRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowDeleting(e);
            if ((this.StatisticMeasureRowDeleting != null))
            {
                this.StatisticMeasureRowDeleting(this, new StatisticMeasureRowChangeEvent(((StatisticMeasureRow)(e.Row)), e.Action));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void RemoveStatisticMeasureRow(StatisticMeasureRow row)
        {
            this.Rows.Remove(row);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
        {
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            HmsModelResultsDM ds = new HmsModelResultsDM();
            global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
            any1.Namespace = "http://www.w3.org/2001/XMLSchema";
            any1.MinOccurs = new decimal(0);
            any1.MaxOccurs = decimal.MaxValue;
            any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any1);
            global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
            any2.MinOccurs = new decimal(1);
            any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any2);
            global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute1.Name = "namespace";
            attribute1.FixedValue = ds.Namespace;
            type.Attributes.Add(attribute1);
            global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute2.Name = "tableTypeName";
            attribute2.FixedValue = "StatisticMeasureDataTable";
            type.Attributes.Add(attribute2);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace))
            {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try
                {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext();)
                    {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length))
                        {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length)
                                        && (s1.ReadByte() == s2.ReadByte()));)
                            {
                                ;
                            }
                            if ((s1.Position == s1.Length))
                            {
                                return type;
                            }
                        }
                    }
                }
                finally
                {
                    if ((s1 != null))
                    {
                        s1.Close();
                    }
                    if ((s2 != null))
                    {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
    }

    /// <summary>
    ///Represents strongly named DataRow class.
    ///</summary>
    public partial class RunResultsRow : global::System.Data.DataRow
    {

        private RunResultsDataTable tableRunResults;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal RunResultsRow(global::System.Data.DataRowBuilder rb) :
                base(rb)
        {
            this.tableRunResults = ((RunResultsDataTable)(this.Table));
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string RunName
        {
            get
            {
                try
                {
                    return ((string)(this[this.tableRunResults.RunNameColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("表“RunResults”中列“RunName”的值为 DBNull。", e);
                }
            }
            set
            {
                this[this.tableRunResults.RunNameColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string ExecutionTime
        {
            get
            {
                try
                {
                    return ((string)(this[this.tableRunResults.ExecutionTimeColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("表“RunResults”中列“ExecutionTime”的值为 DBNull。", e);
                }
            }
            set
            {
                this[this.tableRunResults.ExecutionTimeColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string StartTime
        {
            get
            {
                try
                {
                    return ((string)(this[this.tableRunResults.StartTimeColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("表“RunResults”中列“StartTime”的值为 DBNull。", e);
                }
            }
            set
            {
                this[this.tableRunResults.StartTimeColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string EndTime
        {
            get
            {
                try
                {
                    return ((string)(this[this.tableRunResults.EndTimeColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("表“RunResults”中列“EndTime”的值为 DBNull。", e);
                }
            }
            set
            {
                this[this.tableRunResults.EndTimeColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int RunResults_Id
        {
            get
            {
                return ((int)(this[this.tableRunResults.RunResults_IdColumn]));
            }
            set
            {
                this[this.tableRunResults.RunResults_IdColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsRunNameNull()
        {
            return this.IsNull(this.tableRunResults.RunNameColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetRunNameNull()
        {
            this[this.tableRunResults.RunNameColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsExecutionTimeNull()
        {
            return this.IsNull(this.tableRunResults.ExecutionTimeColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetExecutionTimeNull()
        {
            this[this.tableRunResults.ExecutionTimeColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsStartTimeNull()
        {
            return this.IsNull(this.tableRunResults.StartTimeColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetStartTimeNull()
        {
            this[this.tableRunResults.StartTimeColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsEndTimeNull()
        {
            return this.IsNull(this.tableRunResults.EndTimeColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetEndTimeNull()
        {
            this[this.tableRunResults.EndTimeColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public BasinElementRow[] GetBasinElementRows()
        {
            if ((this.Table.ChildRelations["RunResults_BasinElement"] == null))
            {
                return new BasinElementRow[0];
            }
            else
            {
                return ((BasinElementRow[])(base.GetChildRows(this.Table.ChildRelations["RunResults_BasinElement"])));
            }
        }
    }

    /// <summary>
    ///Represents strongly named DataRow class.
    ///</summary>
    public partial class BasinElementRow : global::System.Data.DataRow
    {

        private BasinElementDataTable tableBasinElement;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal BasinElementRow(global::System.Data.DataRowBuilder rb) :
                base(rb)
        {
            this.tableBasinElement = ((BasinElementDataTable)(this.Table));
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string ExecutionTime
        {
            get
            {
                try
                {
                    return ((string)(this[this.tableBasinElement.ExecutionTimeColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("表“BasinElement”中列“ExecutionTime”的值为 DBNull。", e);
                }
            }
            set
            {
                this[this.tableBasinElement.ExecutionTimeColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string name
        {
            get
            {
                try
                {
                    return ((string)(this[this.tableBasinElement.nameColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("表“BasinElement”中列“name”的值为 DBNull。", e);
                }
            }
            set
            {
                this[this.tableBasinElement.nameColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string UnitSystem
        {
            get
            {
                try
                {
                    return ((string)(this[this.tableBasinElement.UnitSystemColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("表“BasinElement”中列“UnitSystem”的值为 DBNull。", e);
                }
            }
            set
            {
                this[this.tableBasinElement.UnitSystemColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string IsComputationPoint
        {
            get
            {
                try
                {
                    return ((string)(this[this.tableBasinElement.IsComputationPointColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("表“BasinElement”中列“IsComputationPoint”的值为 DBNull。", e);
                }
            }
            set
            {
                this[this.tableBasinElement.IsComputationPointColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string Sediment
        {
            get
            {
                try
                {
                    return ((string)(this[this.tableBasinElement.SedimentColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("表“BasinElement”中列“Sediment”的值为 DBNull。", e);
                }
            }
            set
            {
                this[this.tableBasinElement.SedimentColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string WaterQuality
        {
            get
            {
                try
                {
                    return ((string)(this[this.tableBasinElement.WaterQualityColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("表“BasinElement”中列“WaterQuality”的值为 DBNull。", e);
                }
            }
            set
            {
                this[this.tableBasinElement.WaterQualityColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string type
        {
            get
            {
                try
                {
                    return ((string)(this[this.tableBasinElement.typeColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("表“BasinElement”中列“type”的值为 DBNull。", e);
                }
            }
            set
            {
                this[this.tableBasinElement.typeColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int BasinElement_Id
        {
            get
            {
                return ((int)(this[this.tableBasinElement.BasinElement_IdColumn]));
            }
            set
            {
                this[this.tableBasinElement.BasinElement_IdColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int RunResults_Id
        {
            get
            {
                try
                {
                    return ((int)(this[this.tableBasinElement.RunResults_IdColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("表“BasinElement”中列“RunResults_Id”的值为 DBNull。", e);
                }
            }
            set
            {
                this[this.tableBasinElement.RunResults_IdColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public RunResultsRow RunResultsRow
        {
            get
            {
                return ((RunResultsRow)(this.GetParentRow(this.Table.ParentRelations["RunResults_BasinElement"])));
            }
            set
            {
                this.SetParentRow(value, this.Table.ParentRelations["RunResults_BasinElement"]);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsExecutionTimeNull()
        {
            return this.IsNull(this.tableBasinElement.ExecutionTimeColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetExecutionTimeNull()
        {
            this[this.tableBasinElement.ExecutionTimeColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsnameNull()
        {
            return this.IsNull(this.tableBasinElement.nameColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetnameNull()
        {
            this[this.tableBasinElement.nameColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsUnitSystemNull()
        {
            return this.IsNull(this.tableBasinElement.UnitSystemColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetUnitSystemNull()
        {
            this[this.tableBasinElement.UnitSystemColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsIsComputationPointNull()
        {
            return this.IsNull(this.tableBasinElement.IsComputationPointColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetIsComputationPointNull()
        {
            this[this.tableBasinElement.IsComputationPointColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsSedimentNull()
        {
            return this.IsNull(this.tableBasinElement.SedimentColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetSedimentNull()
        {
            this[this.tableBasinElement.SedimentColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsWaterQualityNull()
        {
            return this.IsNull(this.tableBasinElement.WaterQualityColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetWaterQualityNull()
        {
            this[this.tableBasinElement.WaterQualityColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IstypeNull()
        {
            return this.IsNull(this.tableBasinElement.typeColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SettypeNull()
        {
            this[this.tableBasinElement.typeColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsRunResults_IdNull()
        {
            return this.IsNull(this.tableBasinElement.RunResults_IdColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetRunResults_IdNull()
        {
            this[this.tableBasinElement.RunResults_IdColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public SubbasinAreaRow[] GetSubbasinAreaRows()
        {
            if ((this.Table.ChildRelations["BasinElement_SubbasinArea"] == null))
            {
                return new SubbasinAreaRow[0];
            }
            else
            {
                return ((SubbasinAreaRow[])(base.GetChildRows(this.Table.ChildRelations["BasinElement_SubbasinArea"])));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DrainageAreaRow[] GetDrainageAreaRows()
        {
            if ((this.Table.ChildRelations["BasinElement_DrainageArea"] == null))
            {
                return new DrainageAreaRow[0];
            }
            else
            {
                return ((DrainageAreaRow[])(base.GetChildRows(this.Table.ChildRelations["BasinElement_DrainageArea"])));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public FlowLinkRow[] GetFlowLinkRows()
        {
            if ((this.Table.ChildRelations["BasinElement_FlowLink"] == null))
            {
                return new FlowLinkRow[0];
            }
            else
            {
                return ((FlowLinkRow[])(base.GetChildRows(this.Table.ChildRelations["BasinElement_FlowLink"])));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public HydrologyRow[] GetHydrologyRows()
        {
            if ((this.Table.ChildRelations["BasinElement_Hydrology"] == null))
            {
                return new HydrologyRow[0];
            }
            else
            {
                return ((HydrologyRow[])(base.GetChildRows(this.Table.ChildRelations["BasinElement_Hydrology"])));
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public StatisticsRow[] GetStatisticsRows()
        {
            if ((this.Table.ChildRelations["BasinElement_Statistics"] == null))
            {
                return new StatisticsRow[0];
            }
            else
            {
                return ((StatisticsRow[])(base.GetChildRows(this.Table.ChildRelations["BasinElement_Statistics"])));
            }
        }
    }

    /// <summary>
    ///Represents strongly named DataRow class.
    ///</summary>
    public partial class SubbasinAreaRow : global::System.Data.DataRow
    {

        private SubbasinAreaDataTable tableSubbasinArea;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal SubbasinAreaRow(global::System.Data.DataRowBuilder rb) :
                base(rb)
        {
            this.tableSubbasinArea = ((SubbasinAreaDataTable)(this.Table));
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string area
        {
            get
            {
                try
                {
                    return ((string)(this[this.tableSubbasinArea.areaColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("表“SubbasinArea”中列“area”的值为 DBNull。", e);
                }
            }
            set
            {
                this[this.tableSubbasinArea.areaColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string units
        {
            get
            {
                try
                {
                    return ((string)(this[this.tableSubbasinArea.unitsColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("表“SubbasinArea”中列“units”的值为 DBNull。", e);
                }
            }
            set
            {
                this[this.tableSubbasinArea.unitsColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int BasinElement_Id
        {
            get
            {
                try
                {
                    return ((int)(this[this.tableSubbasinArea.BasinElement_IdColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("表“SubbasinArea”中列“BasinElement_Id”的值为 DBNull。", e);
                }
            }
            set
            {
                this[this.tableSubbasinArea.BasinElement_IdColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public BasinElementRow BasinElementRow
        {
            get
            {
                return ((BasinElementRow)(this.GetParentRow(this.Table.ParentRelations["BasinElement_SubbasinArea"])));
            }
            set
            {
                this.SetParentRow(value, this.Table.ParentRelations["BasinElement_SubbasinArea"]);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsareaNull()
        {
            return this.IsNull(this.tableSubbasinArea.areaColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetareaNull()
        {
            this[this.tableSubbasinArea.areaColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsunitsNull()
        {
            return this.IsNull(this.tableSubbasinArea.unitsColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetunitsNull()
        {
            this[this.tableSubbasinArea.unitsColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsBasinElement_IdNull()
        {
            return this.IsNull(this.tableSubbasinArea.BasinElement_IdColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetBasinElement_IdNull()
        {
            this[this.tableSubbasinArea.BasinElement_IdColumn] = global::System.Convert.DBNull;
        }
    }

    /// <summary>
    ///Represents strongly named DataRow class.
    ///</summary>
    public partial class DrainageAreaRow : global::System.Data.DataRow
    {

        private DrainageAreaDataTable tableDrainageArea;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal DrainageAreaRow(global::System.Data.DataRowBuilder rb) :
                base(rb)
        {
            this.tableDrainageArea = ((DrainageAreaDataTable)(this.Table));
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string area
        {
            get
            {
                try
                {
                    return ((string)(this[this.tableDrainageArea.areaColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("表“DrainageArea”中列“area”的值为 DBNull。", e);
                }
            }
            set
            {
                this[this.tableDrainageArea.areaColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string units
        {
            get
            {
                try
                {
                    return ((string)(this[this.tableDrainageArea.unitsColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("表“DrainageArea”中列“units”的值为 DBNull。", e);
                }
            }
            set
            {
                this[this.tableDrainageArea.unitsColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int BasinElement_Id
        {
            get
            {
                try
                {
                    return ((int)(this[this.tableDrainageArea.BasinElement_IdColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("表“DrainageArea”中列“BasinElement_Id”的值为 DBNull。", e);
                }
            }
            set
            {
                this[this.tableDrainageArea.BasinElement_IdColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public BasinElementRow BasinElementRow
        {
            get
            {
                return ((BasinElementRow)(this.GetParentRow(this.Table.ParentRelations["BasinElement_DrainageArea"])));
            }
            set
            {
                this.SetParentRow(value, this.Table.ParentRelations["BasinElement_DrainageArea"]);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsareaNull()
        {
            return this.IsNull(this.tableDrainageArea.areaColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetareaNull()
        {
            this[this.tableDrainageArea.areaColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsunitsNull()
        {
            return this.IsNull(this.tableDrainageArea.unitsColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetunitsNull()
        {
            this[this.tableDrainageArea.unitsColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsBasinElement_IdNull()
        {
            return this.IsNull(this.tableDrainageArea.BasinElement_IdColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetBasinElement_IdNull()
        {
            this[this.tableDrainageArea.BasinElement_IdColumn] = global::System.Convert.DBNull;
        }
    }

    /// <summary>
    ///Represents strongly named DataRow class.
    ///</summary>
    public partial class FlowLinkRow : global::System.Data.DataRow
    {

        private FlowLinkDataTable tableFlowLink;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal FlowLinkRow(global::System.Data.DataRowBuilder rb) :
                base(rb)
        {
            this.tableFlowLink = ((FlowLinkDataTable)(this.Table));
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string upstreamName
        {
            get
            {
                try
                {
                    return ((string)(this[this.tableFlowLink.upstreamNameColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("表“FlowLink”中列“upstreamName”的值为 DBNull。", e);
                }
            }
            set
            {
                this[this.tableFlowLink.upstreamNameColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int BasinElement_Id
        {
            get
            {
                try
                {
                    return ((int)(this[this.tableFlowLink.BasinElement_IdColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("表“FlowLink”中列“BasinElement_Id”的值为 DBNull。", e);
                }
            }
            set
            {
                this[this.tableFlowLink.BasinElement_IdColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public BasinElementRow BasinElementRow
        {
            get
            {
                return ((BasinElementRow)(this.GetParentRow(this.Table.ParentRelations["BasinElement_FlowLink"])));
            }
            set
            {
                this.SetParentRow(value, this.Table.ParentRelations["BasinElement_FlowLink"]);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsupstreamNameNull()
        {
            return this.IsNull(this.tableFlowLink.upstreamNameColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetupstreamNameNull()
        {
            this[this.tableFlowLink.upstreamNameColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsBasinElement_IdNull()
        {
            return this.IsNull(this.tableFlowLink.BasinElement_IdColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetBasinElement_IdNull()
        {
            this[this.tableFlowLink.BasinElement_IdColumn] = global::System.Convert.DBNull;
        }
    }

    /// <summary>
    ///Represents strongly named DataRow class.
    ///</summary>
    public partial class HydrologyRow : global::System.Data.DataRow
    {

        private HydrologyDataTable tableHydrology;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal HydrologyRow(global::System.Data.DataRowBuilder rb) :
                base(rb)
        {
            this.tableHydrology = ((HydrologyDataTable)(this.Table));
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int Hydrology_Id
        {
            get
            {
                return ((int)(this[this.tableHydrology.Hydrology_IdColumn]));
            }
            set
            {
                this[this.tableHydrology.Hydrology_IdColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int BasinElement_Id
        {
            get
            {
                try
                {
                    return ((int)(this[this.tableHydrology.BasinElement_IdColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("表“Hydrology”中列“BasinElement_Id”的值为 DBNull。", e);
                }
            }
            set
            {
                this[this.tableHydrology.BasinElement_IdColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public BasinElementRow BasinElementRow
        {
            get
            {
                return ((BasinElementRow)(this.GetParentRow(this.Table.ParentRelations["BasinElement_Hydrology"])));
            }
            set
            {
                this.SetParentRow(value, this.Table.ParentRelations["BasinElement_Hydrology"]);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsBasinElement_IdNull()
        {
            return this.IsNull(this.tableHydrology.BasinElement_IdColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetBasinElement_IdNull()
        {
            this[this.tableHydrology.BasinElement_IdColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TimeSeriesRow[] GetTimeSeriesRows()
        {
            if ((this.Table.ChildRelations["Hydrology_TimeSeries"] == null))
            {
                return new TimeSeriesRow[0];
            }
            else
            {
                return ((TimeSeriesRow[])(base.GetChildRows(this.Table.ChildRelations["Hydrology_TimeSeries"])));
            }
        }
    }

    /// <summary>
    ///Represents strongly named DataRow class.
    ///</summary>
    public partial class TimeSeriesRow : global::System.Data.DataRow
    {

        private TimeSeriesDataTable tableTimeSeries;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal TimeSeriesRow(global::System.Data.DataRowBuilder rb) :
                base(rb)
        {
            this.tableTimeSeries = ((TimeSeriesDataTable)(this.Table));
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string DssFileName
        {
            get
            {
                try
                {
                    return ((string)(this[this.tableTimeSeries.DssFileNameColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("表“TimeSeries”中列“DssFileName”的值为 DBNull。", e);
                }
            }
            set
            {
                this[this.tableTimeSeries.DssFileNameColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string DssPathname
        {
            get
            {
                try
                {
                    return ((string)(this[this.tableTimeSeries.DssPathnameColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("表“TimeSeries”中列“DssPathname”的值为 DBNull。", e);
                }
            }
            set
            {
                this[this.tableTimeSeries.DssPathnameColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int TimeSeries_Id
        {
            get
            {
                return ((int)(this[this.tableTimeSeries.TimeSeries_IdColumn]));
            }
            set
            {
                this[this.tableTimeSeries.TimeSeries_IdColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int Hydrology_Id
        {
            get
            {
                try
                {
                    return ((int)(this[this.tableTimeSeries.Hydrology_IdColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("表“TimeSeries”中列“Hydrology_Id”的值为 DBNull。", e);
                }
            }
            set
            {
                this[this.tableTimeSeries.Hydrology_IdColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public HydrologyRow HydrologyRow
        {
            get
            {
                return ((HydrologyRow)(this.GetParentRow(this.Table.ParentRelations["Hydrology_TimeSeries"])));
            }
            set
            {
                this.SetParentRow(value, this.Table.ParentRelations["Hydrology_TimeSeries"]);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsDssFileNameNull()
        {
            return this.IsNull(this.tableTimeSeries.DssFileNameColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetDssFileNameNull()
        {
            this[this.tableTimeSeries.DssFileNameColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsDssPathnameNull()
        {
            return this.IsNull(this.tableTimeSeries.DssPathnameColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetDssPathnameNull()
        {
            this[this.tableTimeSeries.DssPathnameColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsHydrology_IdNull()
        {
            return this.IsNull(this.tableTimeSeries.Hydrology_IdColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetHydrology_IdNull()
        {
            this[this.tableTimeSeries.Hydrology_IdColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TimeSeriesTypeRow[] GetTimeSeriesTypeRows()
        {
            if ((this.Table.ChildRelations["TimeSeries_TimeSeriesType"] == null))
            {
                return new TimeSeriesTypeRow[0];
            }
            else
            {
                return ((TimeSeriesTypeRow[])(base.GetChildRows(this.Table.ChildRelations["TimeSeries_TimeSeriesType"])));
            }
        }
    }

    /// <summary>
    ///Represents strongly named DataRow class.
    ///</summary>
    public partial class TimeSeriesTypeRow : global::System.Data.DataRow
    {

        private TimeSeriesTypeDataTable tableTimeSeriesType;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal TimeSeriesTypeRow(global::System.Data.DataRowBuilder rb) :
                base(rb)
        {
            this.tableTimeSeriesType = ((TimeSeriesTypeDataTable)(this.Table));
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string type
        {
            get
            {
                try
                {
                    return ((string)(this[this.tableTimeSeriesType.typeColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("表“TimeSeriesType”中列“type”的值为 DBNull。", e);
                }
            }
            set
            {
                this[this.tableTimeSeriesType.typeColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string displayString
        {
            get
            {
                try
                {
                    return ((string)(this[this.tableTimeSeriesType.displayStringColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("表“TimeSeriesType”中列“displayString”的值为 DBNull。", e);
                }
            }
            set
            {
                this[this.tableTimeSeriesType.displayStringColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int TimeSeries_Id
        {
            get
            {
                try
                {
                    return ((int)(this[this.tableTimeSeriesType.TimeSeries_IdColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("表“TimeSeriesType”中列“TimeSeries_Id”的值为 DBNull。", e);
                }
            }
            set
            {
                this[this.tableTimeSeriesType.TimeSeries_IdColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TimeSeriesRow TimeSeriesRow
        {
            get
            {
                return ((TimeSeriesRow)(this.GetParentRow(this.Table.ParentRelations["TimeSeries_TimeSeriesType"])));
            }
            set
            {
                this.SetParentRow(value, this.Table.ParentRelations["TimeSeries_TimeSeriesType"]);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IstypeNull()
        {
            return this.IsNull(this.tableTimeSeriesType.typeColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SettypeNull()
        {
            this[this.tableTimeSeriesType.typeColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsdisplayStringNull()
        {
            return this.IsNull(this.tableTimeSeriesType.displayStringColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetdisplayStringNull()
        {
            this[this.tableTimeSeriesType.displayStringColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsTimeSeries_IdNull()
        {
            return this.IsNull(this.tableTimeSeriesType.TimeSeries_IdColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetTimeSeries_IdNull()
        {
            this[this.tableTimeSeriesType.TimeSeries_IdColumn] = global::System.Convert.DBNull;
        }
    }

    /// <summary>
    ///Represents strongly named DataRow class.
    ///</summary>
    public partial class StatisticsRow : global::System.Data.DataRow
    {

        private StatisticsDataTable tableStatistics;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal StatisticsRow(global::System.Data.DataRowBuilder rb) :
                base(rb)
        {
            this.tableStatistics = ((StatisticsDataTable)(this.Table));
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int Statistics_Id
        {
            get
            {
                return ((int)(this[this.tableStatistics.Statistics_IdColumn]));
            }
            set
            {
                this[this.tableStatistics.Statistics_IdColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int BasinElement_Id
        {
            get
            {
                try
                {
                    return ((int)(this[this.tableStatistics.BasinElement_IdColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("表“Statistics”中列“BasinElement_Id”的值为 DBNull。", e);
                }
            }
            set
            {
                this[this.tableStatistics.BasinElement_IdColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public BasinElementRow BasinElementRow
        {
            get
            {
                return ((BasinElementRow)(this.GetParentRow(this.Table.ParentRelations["BasinElement_Statistics"])));
            }
            set
            {
                this.SetParentRow(value, this.Table.ParentRelations["BasinElement_Statistics"]);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsBasinElement_IdNull()
        {
            return this.IsNull(this.tableStatistics.BasinElement_IdColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetBasinElement_IdNull()
        {
            this[this.tableStatistics.BasinElement_IdColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public StatisticMeasureRow[] GetStatisticMeasureRows()
        {
            if ((this.Table.ChildRelations["Statistics_StatisticMeasure"] == null))
            {
                return new StatisticMeasureRow[0];
            }
            else
            {
                return ((StatisticMeasureRow[])(base.GetChildRows(this.Table.ChildRelations["Statistics_StatisticMeasure"])));
            }
        }
    }

    /// <summary>
    ///Represents strongly named DataRow class.
    ///</summary>
    public partial class StatisticMeasureRow : global::System.Data.DataRow
    {

        private StatisticMeasureDataTable tableStatisticMeasure;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal StatisticMeasureRow(global::System.Data.DataRowBuilder rb) :
                base(rb)
        {
            this.tableStatisticMeasure = ((StatisticMeasureDataTable)(this.Table));
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string type
        {
            get
            {
                try
                {
                    return ((string)(this[this.tableStatisticMeasure.typeColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("表“StatisticMeasure”中列“type”的值为 DBNull。", e);
                }
            }
            set
            {
                this[this.tableStatisticMeasure.typeColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string displayString
        {
            get
            {
                try
                {
                    return ((string)(this[this.tableStatisticMeasure.displayStringColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("表“StatisticMeasure”中列“displayString”的值为 DBNull。", e);
                }
            }
            set
            {
                this[this.tableStatisticMeasure.displayStringColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string value
        {
            get
            {
                try
                {
                    return ((string)(this[this.tableStatisticMeasure.valueColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("表“StatisticMeasure”中列“value”的值为 DBNull。", e);
                }
            }
            set
            {
                this[this.tableStatisticMeasure.valueColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string units
        {
            get
            {
                try
                {
                    return ((string)(this[this.tableStatisticMeasure.unitsColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("表“StatisticMeasure”中列“units”的值为 DBNull。", e);
                }
            }
            set
            {
                this[this.tableStatisticMeasure.unitsColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int Statistics_Id
        {
            get
            {
                try
                {
                    return ((int)(this[this.tableStatisticMeasure.Statistics_IdColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("表“StatisticMeasure”中列“Statistics_Id”的值为 DBNull。", e);
                }
            }
            set
            {
                this[this.tableStatisticMeasure.Statistics_IdColumn] = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public StatisticsRow StatisticsRow
        {
            get
            {
                return ((StatisticsRow)(this.GetParentRow(this.Table.ParentRelations["Statistics_StatisticMeasure"])));
            }
            set
            {
                this.SetParentRow(value, this.Table.ParentRelations["Statistics_StatisticMeasure"]);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IstypeNull()
        {
            return this.IsNull(this.tableStatisticMeasure.typeColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SettypeNull()
        {
            this[this.tableStatisticMeasure.typeColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsdisplayStringNull()
        {
            return this.IsNull(this.tableStatisticMeasure.displayStringColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetdisplayStringNull()
        {
            this[this.tableStatisticMeasure.displayStringColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsvalueNull()
        {
            return this.IsNull(this.tableStatisticMeasure.valueColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetvalueNull()
        {
            this[this.tableStatisticMeasure.valueColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsunitsNull()
        {
            return this.IsNull(this.tableStatisticMeasure.unitsColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetunitsNull()
        {
            this[this.tableStatisticMeasure.unitsColumn] = global::System.Convert.DBNull;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsStatistics_IdNull()
        {
            return this.IsNull(this.tableStatisticMeasure.Statistics_IdColumn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetStatistics_IdNull()
        {
            this[this.tableStatisticMeasure.Statistics_IdColumn] = global::System.Convert.DBNull;
        }
    }

    /// <summary>
    ///Row event argument class
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public class RunResultsRowChangeEvent : global::System.EventArgs
    {

        private RunResultsRow eventRow;

        private global::System.Data.DataRowAction eventAction;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public RunResultsRowChangeEvent(RunResultsRow row, global::System.Data.DataRowAction action)
        {
            this.eventRow = row;
            this.eventAction = action;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public RunResultsRow Row
        {
            get
            {
                return this.eventRow;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataRowAction Action
        {
            get
            {
                return this.eventAction;
            }
        }
    }

    /// <summary>
    ///Row event argument class
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public class BasinElementRowChangeEvent : global::System.EventArgs
    {

        private BasinElementRow eventRow;

        private global::System.Data.DataRowAction eventAction;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public BasinElementRowChangeEvent(BasinElementRow row, global::System.Data.DataRowAction action)
        {
            this.eventRow = row;
            this.eventAction = action;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public BasinElementRow Row
        {
            get
            {
                return this.eventRow;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataRowAction Action
        {
            get
            {
                return this.eventAction;
            }
        }
    }

    /// <summary>
    ///Row event argument class
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public class SubbasinAreaRowChangeEvent : global::System.EventArgs
    {

        private SubbasinAreaRow eventRow;

        private global::System.Data.DataRowAction eventAction;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public SubbasinAreaRowChangeEvent(SubbasinAreaRow row, global::System.Data.DataRowAction action)
        {
            this.eventRow = row;
            this.eventAction = action;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public SubbasinAreaRow Row
        {
            get
            {
                return this.eventRow;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataRowAction Action
        {
            get
            {
                return this.eventAction;
            }
        }
    }

    /// <summary>
    ///Row event argument class
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public class DrainageAreaRowChangeEvent : global::System.EventArgs
    {

        private DrainageAreaRow eventRow;

        private global::System.Data.DataRowAction eventAction;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DrainageAreaRowChangeEvent(DrainageAreaRow row, global::System.Data.DataRowAction action)
        {
            this.eventRow = row;
            this.eventAction = action;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DrainageAreaRow Row
        {
            get
            {
                return this.eventRow;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataRowAction Action
        {
            get
            {
                return this.eventAction;
            }
        }
    }

    /// <summary>
    ///Row event argument class
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public class FlowLinkRowChangeEvent : global::System.EventArgs
    {

        private FlowLinkRow eventRow;

        private global::System.Data.DataRowAction eventAction;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public FlowLinkRowChangeEvent(FlowLinkRow row, global::System.Data.DataRowAction action)
        {
            this.eventRow = row;
            this.eventAction = action;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public FlowLinkRow Row
        {
            get
            {
                return this.eventRow;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataRowAction Action
        {
            get
            {
                return this.eventAction;
            }
        }
    }

    /// <summary>
    ///Row event argument class
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public class HydrologyRowChangeEvent : global::System.EventArgs
    {

        private HydrologyRow eventRow;

        private global::System.Data.DataRowAction eventAction;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public HydrologyRowChangeEvent(HydrologyRow row, global::System.Data.DataRowAction action)
        {
            this.eventRow = row;
            this.eventAction = action;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public HydrologyRow Row
        {
            get
            {
                return this.eventRow;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataRowAction Action
        {
            get
            {
                return this.eventAction;
            }
        }
    }

    /// <summary>
    ///Row event argument class
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public class TimeSeriesRowChangeEvent : global::System.EventArgs
    {

        private TimeSeriesRow eventRow;

        private global::System.Data.DataRowAction eventAction;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TimeSeriesRowChangeEvent(TimeSeriesRow row, global::System.Data.DataRowAction action)
        {
            this.eventRow = row;
            this.eventAction = action;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TimeSeriesRow Row
        {
            get
            {
                return this.eventRow;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataRowAction Action
        {
            get
            {
                return this.eventAction;
            }
        }
    }

    /// <summary>
    ///Row event argument class
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public class TimeSeriesTypeRowChangeEvent : global::System.EventArgs
    {

        private TimeSeriesTypeRow eventRow;

        private global::System.Data.DataRowAction eventAction;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TimeSeriesTypeRowChangeEvent(TimeSeriesTypeRow row, global::System.Data.DataRowAction action)
        {
            this.eventRow = row;
            this.eventAction = action;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TimeSeriesTypeRow Row
        {
            get
            {
                return this.eventRow;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataRowAction Action
        {
            get
            {
                return this.eventAction;
            }
        }
    }

    /// <summary>
    ///Row event argument class
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public class StatisticsRowChangeEvent : global::System.EventArgs
    {

        private StatisticsRow eventRow;

        private global::System.Data.DataRowAction eventAction;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public StatisticsRowChangeEvent(StatisticsRow row, global::System.Data.DataRowAction action)
        {
            this.eventRow = row;
            this.eventAction = action;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public StatisticsRow Row
        {
            get
            {
                return this.eventRow;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataRowAction Action
        {
            get
            {
                return this.eventAction;
            }
        }
    }

    /// <summary>
    ///Row event argument class
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public class StatisticMeasureRowChangeEvent : global::System.EventArgs
    {

        private StatisticMeasureRow eventRow;

        private global::System.Data.DataRowAction eventAction;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public StatisticMeasureRowChangeEvent(StatisticMeasureRow row, global::System.Data.DataRowAction action)
        {
            this.eventRow = row;
            this.eventAction = action;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public StatisticMeasureRow Row
        {
            get
            {
                return this.eventRow;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataRowAction Action
        {
            get
            {
                return this.eventAction;
            }
        }
    }
}
